;Epoch Game Pocket Computer
;Tetris
;ACASM v1.42
;azya, 2023

    RELAXED ON

wFlags EQU 0xFF80

wBitmapWidth EQU 0xFF81
wBitmapShift EQU 0xFF82

wAnimationY EQU 0xFF83

wIndex EQU 0xFF84
wScreenLine EQU 0xFF85

wDrawMode EQU 0xFF86

wSkipLeadZeroes EQU 0xFF87
wDigitsCount EQU 0xFF88

wNoteSheetPtr EQU 0xFF89
wNoteSheetPtrL EQU 0xFF89
wNoteSheetPtrH EQU 0xFF8A
wNoteValue EQU 0xFF8B

wPiecePos EQU 0xFF8C
wPieceX EQU 0xFF8C
wPieceY EQU 0xFF8D
wCurPiece EQU 0xFF8E
wNextPiece EQU 0xFF8F

wScoreAdderBCD EQU 0xFF90
wScoreAdderBCDL EQU 0xFF9B

wFullLine1 EQU 0xFF9C
wFullLine2 EQU 0xFF9D
wFullLine3 EQU 0xFF9E
wFullLine4 EQU 0xFF9F

wSeed10 EQU 0xFFA0
wSeed23 EQU 0xFFA1
wKeyUpWaitP1 EQU 0xFFA2
wKeyPressedP1 EQU 0xFFA3
wKeyUpWaitP2 EQU 0xFFA4
wKeyPressedP2 EQU 0xFFA5

wCurFreqL EQU 0xFFA6
wCounterL EQU 0xFFA7
wCurFreqH EQU 0xFFA8
wCounterH EQU 0xFFA9

wGameStartLevel EQU 0xFFAA
wGameStartHigh EQU 0xFFAB
wGameOverCounter EQU 0xFFAC
wDropCounter EQU 0xFFAD
wRightCounter EQU 0xFFAE
wLeftCounter EQU 0xFFAF

wGameType EQU 0xFFB0

wBufCurLine EQU 0xFFB1
wClearFlags EQU 0xFFB2
wLastLineClearCount EQU 0xFFB3

wLevel EQU 0xFFB4
wLevelBCD EQU 0xFFB5
wLevelIncCounter EQU 0xFFB6

wSingleCount EQU 0xFFC0
wDoubleCount EQU 0xFFC1
wTripleCount EQU 0xFFC2
wTetrisCount EQU 0xFFC3

wDropsCount EQU 0xFFC4
wDropsCountL EQU 0xFFC4
wDropsCountH EQU 0xFFC5

wScoresCountBCD EQU 0xFFC6
wScoresCountBCDH EQU 0xFFC6
wScoresCountBCDM EQU 0xFFC7
wScoresCountBCDL EQU 0xFFC8

wLinesCountBCD EQU 0xFFC9
wLinesCountBCDH EQU 0xFFC9
wLinesCountBCDL EQU 0xFFCA

wScoresBCD EQU 0xFFCB
wScoresBCDH EQU 0xFFCB
wScoresBCDM EQU 0xFFCC
wScoresBCDL EQU 0xFFCD


DM_DRAW EQU 0b001
DM_INVERT EQU 0b010
DM_CLEAR EQU 0b100
DM_CHECK EQU 0b1000

LCD_RST EQU 0b00000001
LCD_T EQU 0b00001000 | LCD_RST
LCD_B EQU 0b00010000 | LCD_RST
LCD_R EQU 0b00100000 | LCD_RST
LCD_D EQU 0b00000100
LCD_E EQU 0b00000010

LCD_DATA_DOWN EQU 0x3A

PA_KEY_P1 EQU 0x80
PA_KEY_P2 EQU 0x40
PC_KEY_P1_UP EQU 0b00001
PC_KEY_P2_DOWN EQU 0b00001
PC_KEY_P1_LEFT EQU 0b00010
PC_KEY_P2_RIGHT EQU 0b00010
PC_KEY_P1_SELECT EQU 0b0100
PC_KEY_P2_START EQU 0b0100
PC_KEY_P1_TB EQU 0b01000
PC_KEY_P2_TA EQU 0b01000
PC_KEY_P1_B EQU 0b10000
PC_KEY_P2_A EQU 0b10000

DISPLAY EQU 0xC000
DISPLAY_SCORE_YX EQU 10 << 8 | 39
DISPLAY_LEVEL_GAMEA_YX EQU 27 << 8 | 54
DISPLAY_LINES_YX EQU 40 << 8 | 46
DISPLAY_LEVEL_GAMEB_YX EQU 8 << 8 | 54
DISPLAY_HIGH_YX EQU 22 << 8 | 54

GAME_TYPE_A EQU 0x00
GAME_TYPE_B EQU 0x01
GAME_TYPE_S EQU 0x02

F_SYS_SOUND_ROUTINE EQU 0x01
F_SFX_BLOCK EQU 0x02
F_HIDE_NEXT EQU 0x04
F_INTT_JMP_4009 EQU 0x80



    org 0x4000
    db 0x55             ;Pokekon Identifier
    dw start

    org 0x4009
timerInt:
    ;107+204us
incCounter:
    lxi DE, wCurFreqL
    ldax DE+
    addx DE
    stax DE+
    ldax DE+
    adcx DE
    stax DE-

    dcrw wNoteValue
    jmp skipNextNote
nextNote:
    lhld wNoteSheetPtr
    ldax HL+
setFreqByA:
    oni A, 0x04
    jr setFreqDiv1
setFreqDiv16:
    mov TMM, A
    ani A, 0xF0
    staw wCurFreqL
    rld
    ani A, 0x0F
    stax DE
    ldax HL+
    jr setFreqByAEnd
setFreqDiv1:
    offi A, 0x08
    jr doInstruction
    mov TMM, A
    mvi A, 0
    stax DE
    ldax HL+
    staw wCurFreqL
setFreqByAEnd:
    mov TM, A
    stm
    ldax HL+
setNoteValue:
    staw wNoteValue
    shld wNoteSheetPtr

skipNextNote:
    pop HL
    pop DE
    pop BC
    pop V
    ei
    reti

doInstruction:
    offi A, 0x80
    jr setNoteValue
    offi A, 0x01
    lxi HL, dummySilentData + 3
    ldax HL+
    staw wNoteSheetPtrL
    ldax HL
    staw wNoteSheetPtrH
    aniw wFlags, ~F_SFX_BLOCK
    jmp nextNote

start:
    di
    LXI SP, 0xC800

clearWRAM:
    lxi BC, wFlags
    mvi A, 0
clearWRAMLoop:
    stax BC
    inr C
    jr clearWRAMLoop
    
    oriw wFlags, F_INTT_JMP_4009

    oriw wSeed23, 0x25
    oriw wSeed10, 0x31

    call setupLCD
    ei
    ;
    ;
screenMain:
    call titleTheme
screenMainLoop:
    call randomizeAndParseKey
    offiw wKeyPressedP1, PC_KEY_P1_LEFT
    aniw wGameType, 0
    offiw wKeyPressedP2, PC_KEY_P2_RIGHT
    oriw wGameType, GAME_TYPE_B

    call drawTitleScreen
    lxi BC, 50 << 8 | 1
    eqiw wGameType, GAME_TYPE_A
    mvi C, 39
    lxi HL, brmArrow
    call invertBitmap
    call writeLCD

    oniw wKeyPressedP2, PC_KEY_P2_START | PC_KEY_P2_A
    jmp screenMainLoop
    
    call dummySilent
    eqiw wGameType, GAME_TYPE_B

    jmp startGameA
    ;
    ;
startGameB:
startGameBSelectLevelLoop:
    call parseKeyWaitPressedUp
    call drawGameBMenu
    
    ldaw wGameStartLevel
    mov B, A
    offiw wKeyPressedP1, PC_KEY_P1_LEFT
    dcr A
    offiw wKeyPressedP2, PC_KEY_P2_RIGHT
    inr A
    offiw wKeyPressedP1, PC_KEY_P1_UP
    sui A, 5
    offiw wKeyPressedP2, PC_KEY_P2_DOWN
    adi A, 5
    gti A, 9
    staw wGameStartLevel

    ldaw wGameStartLevel
    eqa A, B
    call menuNavSFX
    mvi B, 28
    lti A, 5
    mvi B, 36
    lti A, 5
    sui A, 5
    add A, A
    add A, A
    add A, A
    adi A, 4
    mov C, A

    lxi HL, btmSelectLevel
    oniw wCounterH, 0x80
    call invertBitmap

    ldaw wGameStartHigh
    mvi B, 28
    lti A, 3
    mvi B, 36
    lti A, 3
    sui A, 3
    add A, A
    add A, A
    add A, A
    adi A, 48
    mov C, A
    lxi HL, btmSelectLevel
    call invertBitmap

    call writeLCD

    offiw wKeyPressedP1, PC_KEY_P1_B
    jmp screenMain
    oniw wKeyPressedP2, PC_KEY_P2_START | PC_KEY_P2_A
    jmp startGameBSelectLevelLoop

    offiw wKeyPressedP2, PC_KEY_P2_START
    jmp startGameBSelectEnd

startGameBSelectHighLoop:
    call parseKeyWaitPressedUp
    call drawGameBMenu
    
    ldaw wGameStartHigh
    mov B, A
    offiw wKeyPressedP1, PC_KEY_P1_LEFT
    dcr A
    offiw wKeyPressedP2, PC_KEY_P2_RIGHT
    inr A
    offiw wKeyPressedP1, PC_KEY_P1_UP
    sui A, 3
    offiw wKeyPressedP2, PC_KEY_P2_DOWN
    adi A, 3
    gti A, 5
    staw wGameStartHigh

    ldaw wGameStartHigh
    eqa A, B
    call menuNavSFX
    mvi B, 28
    lti A, 3
    mvi B, 36
    lti A, 3
    sui A, 3
    add A, A
    add A, A
    add A, A
    adi A, 48
    mov C, A

    lxi HL, btmSelectLevel
    oniw wCounterH, 0x80
    call invertBitmap

    ldaw wGameStartLevel
    mvi B, 28
    lti A, 5
    mvi B, 36
    lti A, 5
    sui A, 5
    add A, A
    add A, A
    add A, A
    adi A, 4
    mov C, A
    lxi HL, btmSelectLevel
    call invertBitmap
    call writeLCD

    offiw wKeyPressedP1, PC_KEY_P1_B
    jmp startGameBSelectLevelLoop
    oniw wKeyPressedP2, PC_KEY_P2_START | PC_KEY_P2_A
    jmp startGameBSelectHighLoop

startGameBSelectEnd:
    call drawGameBScreen
    call randomizePlayfield
    mvi A, 0x25
    staw wLinesCountBCDL
    jmp newGame


startGameA:
startGameALoop:
    call parseKeyWaitPressedUp
    call drawGameAMenu
    
    ldaw wGameStartLevel
    mov B, A
    offiw wKeyPressedP1, PC_KEY_P1_LEFT
    dcr A
    offiw wKeyPressedP2, PC_KEY_P2_RIGHT
    inr A
    offiw wKeyPressedP1, PC_KEY_P1_UP
    sui A, 5
    offiw wKeyPressedP2, PC_KEY_P2_DOWN
    adi A, 5
    gti A, 9
    staw wGameStartLevel

    ldaw wGameStartLevel
    eqa A, B
    call menuNavSFX
    mvi B, 28
    lti A, 5
    mvi B, 36
    lti A, 5
    sui A, 5
    add A, A
    add A, A
    add A, A
    adi A, 18
    mov C, A

    lxi HL, btmSelectLevel
    oniw wCounterH, 0x80
    call invertBitmap
    call writeLCD

    offiw wKeyPressedP1, PC_KEY_P1_B
    jmp screenMain
    oniw wKeyPressedP2, PC_KEY_P2_START | PC_KEY_P2_A
    jmp startGameALoop

    call drawGameAScreen
    aniw wLinesCountBCDL, 0
    ;
    ;
newGame:
    mvi A, 0
    staw wScoresBCDL
    staw wScoresBCDM
    staw wScoresBCDH
    staw wLinesCountBCDH
    staw wGameOverCounter
    staw wDropsCountL
    staw wDropsCountH
    staw wSingleCount
    staw wDoubleCount
    staw wTripleCount
    staw wTetrisCount
    staw wScoresCountBCDL
    staw wScoresCountBCDM
    staw wScoresCountBCDH
    staw wLevelIncCounter

    ldaw wGameStartLevel
    staw wLevelBCD
    staw wLevel
    
    staw wIndex
newGameSetLevelLoop:
    ldaw wLevelIncCounter
    adi A, 10
    staw wLevelIncCounter
    call incScoreAdder
    dcrw wIndex
    jr newGameSetLevelLoop

    dcrw wLevelIncCounter
    ldaw wSeed10
    ani A, 0xF0
    staw wNextPiece

newPiece:
    call drawLevelLinesScores
    oriw wKeyUpWaitP2, PC_KEY_P2_DOWN | PC_KEY_P2_START

genNextPiece:
    ldaw wCurPiece
    ani A, 0xF0
    mov B, A
    ldaw wNextPiece
    staw wCurPiece
    mov D, A
    mvi C, 2
genNextPieceRand:
    call randomizeAndParseKey
    ldaw wSeed10
    ani A, 0xF0
    staw wNextPiece
    ora A, D
    ora A, B
    eqa A, B
    jr drawNewPiece
    dcr C
    jr genNextPieceRand

drawNewPiece:
    lxi HL, 3 << 8 | 5
    shld wPiecePos

    call showNextPiece

    call writeLCD

    mvi A, 0
    staw wLastLineClearCount
    staw wCounterL
    staw wCounterH

    call checkCollision
    jmp gameLoop

gameOver:
    inrw wGameOverCounter
    gtiw wGameOverCounter, 2
    jmp gameLoop
    call gameOverSFX
    lxi HL, gameOverBriksEnd - 1
    call drawPlayfieldSmooth
    mvi A, 34
    call delayFrames
    call drawPlayfieldSmooth

gameOverWaitKey:
    call randomizeAndParseKey
    oniw wKeyPressedP2, PC_KEY_P2_START | PC_KEY_P2_A
    jr gameOverWaitKey
    eqiw wGameType, GAME_TYPE_A
    jmp startGameB
    ltiw wScoresBCDH, 0x10
    call animationRocket
    jmp startGameA


gameLoop:
    lxi HL, delayByLevel
    ldaw wLevel
    add A, L
    mov L, A
    ldax HL
    staw wDropCounter
gameLoopDraw:
    eqiw wGameOverCounter, 0
    call writeLCDPlayfield
    call invertPiece
    ;oniw wDropCounter, 1        ;30FPS
    call writeLCDPlayfield
    call invertPiece

gameLoopFrameDelay:    
    call randomizeAndParseKey

    gtiw wCounterH, 0x0C
    jr gameLoopFrameDelay
    di
    ldaw wCounterL
    sui A, 0x44
    staw wCounterL
    ldaw wCounterH
    sbi A, 0x0C
    staw wCounterH
    ei

    offiw wKeyPressedP1, PC_KEY_P1_SELECT
    call switchNextPiece
    offiw wKeyPressedP2, PC_KEY_P2_START
    call pauseScreen
    offiw wKeyPressedP2, PC_KEY_P2_RIGHT
    call rightPiece
    aniw wRightCounter, 0
    offiw wKeyPressedP1, PC_KEY_P1_LEFT
    call leftPiece
    aniw wLeftCounter, 0
    offiw wKeyPressedP2, (PC_KEY_P2_A | PC_KEY_P2_TA)
    call clockwisePiece
    offiw wKeyPressedP1, (PC_KEY_P1_B | PC_KEY_P1_TB)
    call counterclockwisePiece
    offiw wKeyPressedP2, PC_KEY_P2_DOWN
    call softDrop
    
    dcrw wDropCounter
    jmp gameLoopDraw

    ;dropPiece
    inrw wPieceY
    call checkCollision
    jmp gameLoop            ;passed
                            ;collision
    ;pieceLanded
    call pieceLandedSFX      
    dcrw wPieceY         
    call drawPieceAndCheckFull
    eqiw wLastLineClearCount, 0
    call processFullLines

    neiw wLinesCountBCDL, 0
    eqiw wGameType, GAME_TYPE_B
    jmp newPiece
    ;
    ;
checkGameBFinish:
    call drawLevelLinesScores
    call writeLCD
    call gameBWinSong
    mvi A, 100
    call delayFrames
    call hideNextPiece
    call writeLCDNextPiece

    eqiw wGameStartLevel, 9
    jmp gameBComplete

animationDancers:
    call dancersSong
    lxi HL, gameBDancefloorEnd - 1
    call drawPlayfieldSmooth

    mvi A, 45
    staw wIndex
animationDancersLoop:
    lxi HL, btmPartyHard0
    offiw wIndex, 0x2
    lxi HL, btmPartyHard1
    ldaw wGameStartHigh
    nei A, 5
    adi A, 2
animationDancersLoop1:
    push V
    ldax HL+
    mov C, A
    ldax HL+
    mov B, A
    call invertBitmap
    pop V
    dcr A
    jr animationDancersLoop1

animationDancersLoopSkip:
    offiw wIndex, 0x1
    call writeLCD
    mvi A, 15
    call delayFrames
    dcrw wIndex
    jmp animationDancersLoop

    neiw wGameStartHigh, 5
    call animationRocket
    call drawGameBScreen
    call drawLevelGameB
    call writeLCD

gameBComplete:
    lxi HL, gameBScoreCountEnd - 1
    call drawPlayfieldSmooth

gameBCompletCountAnimation:
    lxi BC, 5 << 8 | 13
    lxi HL, wScoreAdderBCDL
    ldaw wSingleCount
    call gameBCompleteCountSingleStart
    ldaw wDoubleCount
    call gameBCompleteCountSingleStart
    ldaw wTripleCount
    call gameBCompleteCountSingleStart
    ldaw wTetrisCount
    call gameBCompleteCountSingleStart

    lxi HL, scoresAdderInc + 2
    ldaw wDropsCountL
    call gameBCompleteCountSingleStart
    jr gameBCompleteCountDropsLoopStart
gameBCompleteCountDropsLoop:
    call gameBCompleteCountSingleLoop
gameBCompleteCountDropsLoopStart:
    dcrw wDropsCountH
    jr gameBCompleteCountDropsLoop

    jmp gameOverWaitKey

gameBCompleteCountSingleStart:
    staw wIndex
    jmp gameBCompleteCountSingleLoopStart
gameBCompleteCountSingleLoop:
    lxi DE, wScoresCountBCDL
    push BC
addtLoop:
    push HL
    ldax HL-
    addx DE
    daa
    stax DE-
    ldax HL-
    adcx DE
    daa
    stax DE-    
    ldax HL
    adcx DE
    daa
    stax DE
    mvi A, 4
    call drawDigitsSmall
    mov A, E
    nei A, (wScoresBCDL + 1) & 0xFF
    jmp addtEnd
    pop HL
    lxi BC, 59 << 8 | 13
    lxi DE, wScoresBCDL
    jmp addtLoop
addtEnd:
    di
    call writeLCDPlayfield
    lxi HL, pieceMoveSFXData
    shld wNoteSheetPtr
    aniw wNoteValue, 0
    oniw wIndex, 0x01
    ei
    pop HL
    pop BC
gameBCompleteCountSingleLoopStart:
    dcrw wIndex
    jmp gameBCompleteCountSingleLoop
    ei
    mov A, B
    lti A, 49
    ret
    adi A, 11
    mov B, A
    dcx HL
    dcx HL
    dcx HL
    mvi A, 0
    staw wScoresCountBCDL
    staw wScoresCountBCDM
    staw wScoresCountBCDH
gameBCompleteCountSingleEnd:
    mvi A, 30
    jmp delayFrames


parseKeyWaitPressedUp:
    lxi HL, wKeyPressedP2
    ldax HL-
    orax HL
    stax HL-
    ldax HL-
    orax HL
    stax HL

randomizeAndParseKey:
    lxi HL, wSeed10
    ldax HL+
    addx HL-
    ani A, 0x0F
    lti A, 7
    sui A, 7
    rld
    inx HL
    rrd

    ;parseKey
    inx HL          ;wKeyUpWaitP1
    mvi A, PA_KEY_P1 | LCD_E | LCD_R
    call parseKeyReadPort
    mvi A, PA_KEY_P2 | LCD_E | LCD_R
parseKeyReadPort:
    mov PA, A
    mov A, PC
    xri A, 0xFF
    mov B, A
    anax HL         ;wKeyUpWaitPx
    stax HL+        ;wKeyUpWaitPx
    xra A, B
    stax HL+        ;wKeyPressedPx
    ret


clockwisePiece:
    oriw wKeyUpWaitP2, (PC_KEY_P2_A | PC_KEY_P2_TA)
    call incPieceRotate
    call checkCollision
    jmp rotateSFX              ;passed
decPieceRotate:                 ;collision
    ldaw wCurPiece
    xri A, 0b0100
    offi A, 0b0100
    xri A, 0b1000
    staw wCurPiece
    ret

counterclockwisePiece:
    oriw wKeyUpWaitP1, (PC_KEY_P1_B | PC_KEY_P1_TB)
    call decPieceRotate
    call checkCollision
    jmp rotateSFX               ;passed
incPieceRotate:                  ;collision
    ldaw wCurPiece
    xri A, 0b0100
    oni A, 0b0100
    xri A, 0b1000
    staw wCurPiece
    ret

rightPiece:
    inrw wRightCounter
    neiw wRightCounter, 1
    jr rightPieceDo
    eqiw wRightCounter, 24
    rets
    aniw wRightCounter, ~8 ;-8
rightPieceDo:
    inrw wPieceX
    call checkCollision
    jr movePieceOk               ;passed
    dcrw wPieceX                 ;collision
    rets

leftPiece:
    inrw wLeftCounter
    neiw wLeftCounter, 1
    jr leftPieceDo
    eqiw wLeftCounter, 24
    rets
    aniw wLeftCounter, ~8 ;-8
leftPieceDo:
    dcrw wPieceX
    call checkCollision
    jr movePieceOk               ;passed
    inrw wPieceX                 ;collision
    rets
movePieceOk:
    call pieceMoveSFX
    rets

softDrop:
    oniw wKeyPressedP2, PC_KEY_P2_RIGHT
    offiw wKeyPressedP1, PC_KEY_P1_LEFT
    ret
    gtiw wDropCounter, 2
    ret
    mvi A, 2
    staw wDropCounter
    lxi DE, scoresAdderInc + 2
    eqiw wGameType, GAME_TYPE_B
    jmp addScoresDE
    inrw wDropsCountL
    ret
    inrw wDropsCountH
    ret


drawPieceAndCheckFull:
    mvi A, DM_DRAW
checkCollision:
    mvi A, DM_CHECK
invertPiece:
    mvi A, DM_INVERT
    staw wDrawMode

    ;prepare piece pointer
    mvi H, piece >> 8
    ldaw wCurPiece
    mov L, A

    mvi D, tbl3x1 >> 8

drawPieceLoop:
    lbcd wPiecePos               ; B <- PieceY, C <- PieceX
    
    ;get X
    rld                         ; A <- (HL.4_)
    ani A, 0x0F
    add A, C                    ; * 3
    add A, C                    ;
    add A, C                    ;

    ;set display pointer (BC) by piece X
    mov C, A

    ;get Y
    ldax HL+
    ani A, 0x0F
    add A, B

    staw wBufCurLine

    ;set display pointer (BC) by piece Y
    mvi B, (DISPLAY >> 8) - 1
    offi A, 0x08
    mvi B, (DISPLAY >> 8) + 2
    offi A, 0x10
    mvi B, (DISPLAY >> 8) + 5
    offi A, 0x04
    inr B

    ;set tbl3x1 pointer (DE) by piece Y
    ral
    ani A, 0x0E
    adi A, tbl3x1 & 0xFF
    mov E, A

    ldax DE+
    offiw wDrawMode, DM_INVERT
    jmp xorDE_BC
    oniw wDrawMode, DM_CHECK
    jr orDE_BC

checkDEtoBC:
    eqiw wBufCurLine, 24    ;check bottom
    offax BC
    rets
    inr B
    ldax DE+
    offax BC
    rets
    mov A, L
    offi A, 0x03
    jmp drawPieceLoop
    aniw wGameOverCounter, 0
    ret

orDE_BC:
    orax BC
    stax BC
    inr C
    stax BC
    inr C
    stax BC
    inr B           ;next line
    ldax DE
    orax BC
    stax BC
    dcr C
    stax BC
    dcr C
    stax BC
checkFull:
    mvi C, 8
checkFullLoop:
    ldax DE
    offax BC
    jr checkFullSkip
    dcr B
    dcx DE
    ldax DE+
    onax BC
    jmp drawPieceNextLine  ;not full
    inr B
checkFullSkip:
    mov A, C
    adi A, 3
    mov C, A
    eqi A, 38
    jr checkFullLoop
    ;is full
    dcx HL
    ldax HL+
    ani A, 0x0F
    lxi BC, wFullLine1
    add A, C
    mov C, A
    ldax BC
    nei A, 0
    inrw wLastLineClearCount
    ldaw wBufCurLine
    stax BC
    jr drawPieceNextLine

xorDE_BC:
    xrax BC
    stax BC
    inr C
    stax BC
    inr C
    stax BC
    inr B           ;next line
    ldax DE+
    xrax BC
    stax BC
    dcr C
    stax BC
    dcr C
    stax BC

drawPieceNextLine:
    mov A, L
    offi A, 0x03
    jmp drawPieceLoop
    ret


hideNextPiece:
    lxi BC, 51 << 8 | 56
    lxi HL, btmClearNextPiece
    jmp clearBitmap

switchNextPiece:
    oriw wKeyUpWaitP1, PC_KEY_P1_SELECT
    ldaw wFlags
    xri A, F_HIDE_NEXT
    staw wFlags

showNextPiece:
    call hideNextPiece
    offiw wFlags, F_HIDE_NEXT
    jmp writeLCDNextPiece
    lbcd wPiecePos
    push BC
    ldaw wCurPiece
    push V
    mvi A, 18
    staw wPieceX
    staw wPieceY
    ldaw wNextPiece
    staw wCurPiece
    call invertPiece
    pop V
    staw wCurPiece
    pop BC
    sbcd wPieceX
    jmp writeLCDNextPiece


processFullLines:
    call lineClearSFX
    neiw wLastLineClearCount, 4
    call lineClear4SFX
    
    mvi A, 0
    staw wCounterL
    staw wCounterH

    mvi A, 6
processFullLinesLoop:
    push V

invertFullLines:
    lxi HL, wFullLine1
invertFullLinesLoop:
    ldax HL+                    ;get full line Y

    lxi BC, (DISPLAY - (1 << 8)) | 8
    offi A, 0x08
    mvi B, (DISPLAY >> 8) + 2
    offi A, 0x10
    mvi B, (DISPLAY >> 8) + 5
    offi A, 0x04
    inr B
    
    lxi DE, tbl3x1
    ral
    ani A, 0x0E
    add A, E
    mov E, A

invertFullLineLoop:
    ldax BC
    xrax DE+
    stax BC
    inr B
    ldax BC
    xrax DE-
    stax BC
    dcr B
    inr C
    mov A, C
    eqi A, 38
    jmp invertFullLineLoop

invertFullLinesSkip:
    mov A, L
    gti A, wFullLine4 & 0xFF
    jmp invertFullLinesLoop
    
processFullLinesDelay:
    call writeLCDPlayfield
    mvi A, 11
    call delayFrames
    
    pop V
    dcr A
    jmp processFullLinesLoop

clearLines:
    lxi HL, wFullLine1
clearLinesLoopFulls:
    mvi C, 8
clearLinesLoopCols:
    ldax HL
    suinb A, 3              ;top 3 lines are not used
    jmp clearLinesSkipLine    
    staw wIndex

    lxi DE, tbl3x1 + 6      ;top 3 lines are not used
    aniw wClearFlags, 0
    mvi B, DISPLAY >> 8 - 1
clearLinesLoop:
    call clearLinesPrepareBC
    inr C
    stax BC
    inr C
    stax BC
    inr B

    call clearLinesPrepareBC
    dcr C
    stax BC
    dcr C
    stax BC

    mov A, E
    eqi A, tbl3x1Half & 0xFF
    dcr B
    eqi A, tbl3x1End & 0xFF
    jr clearLinesLoopSkip
    lxi DE, tbl3x1
    inr B
    inr B
clearLinesLoopSkip:

    aniw wClearFlags, 0x01
    inrw wClearFlags
    aniw wClearFlags, 0xFE

    dcrw wIndex
    jmp clearLinesLoop

    mov A, C
    adi A, 3
    mov C, A
    eqi A, 38
    jmp clearLinesLoopCols

clearLinesSkipLine:
    mvi A, 0
    stax HL+
    mov A, L
    gti A, wFullLine4 & 0xFF
    jmp clearLinesLoopFulls

    call pieceLandedSFX

    call writeLCDPlayfield
    mvi A, 22
    call delayFrames
    ;
    ;
    eqiw wGameType, GAME_TYPE_A
    jmp gameBCounts
    ;
gameACounts:
incLevel:
    ldaw wLastLineClearCount
    mov B, A
    ldaw wLevelIncCounter
    subnb A, B
    adi A, 10
    staw wLevelIncCounter
    skn CY
    jr incLevel1
    jr incLevelEnd
    ltiw wLevelBCD, 20
    jr incLevelEnd
incLevel1:
    call levelUpSFX
    call incScoreAdder
    inrw wLevel
    ldaw wLevelBCD
    inr A
    daa
    staw wLevelBCD
incLevelEnd:
    ;
    ;
addClearCount:
    lxi HL, wLinesCountBCDL
    ldaw wLastLineClearCount
    addx HL
    daa
    stax HL-
    ldax HL
    aci A, 0
    daa
    stax HL
    skn CY
    call fix9999
    ;
    ;
addScores:
    lxi DE, wScoreAdderBCDL + 3
    lxi BC, wLastLineClearCount
    mov A, E
    subx BC
    subx BC
    subx BC
    mov E, A

addScoresDE:
    lxi HL, wScoresBCDL
    
    mvi B, 2
addPackedBCD:
    clc
addPackedBCDLoop:
    ldax DE-
    adcx HL
    daa
    stax HL-
    dcr B
    jr addPackedBCDLoop

check999999:
    skn CY
    jr fix999999
    ret
fix999999:
    mvi A, 0x99
    inx HL
    stax HL+
fix9999:
    mvi A, 0x99
    stax HL+
    stax HL
    ret

incScoreAdder:
    lxi HL, wScoreAdderBCDL
    lxi DE, scoresAdderByLevel + 11
    mvi B, 11
    jmp addPackedBCD


gameBCounts:
incClearCount:
    lxi HL, wSingleCount - 1
    ldaw wLastLineClearCount
    add A, L
    mov L, A
    ldax HL
    inr A
    stax HL

subClearCount:
    ldaw wLastLineClearCount
    adi A, 0x65
    xri A, 0xFF
    lxi HL, wLinesCountBCDL
    addx HL
    daa
    skn CY
    jr subClearCountStore
    mvi a, 0
subClearCountStore:
    stax HL
    ret


drawLevelLinesScores:
    eqiw wGameType, GAME_TYPE_B
    jmp drawLevelGameA

drawLevelGameB:
    lxi BC, DISPLAY_LEVEL_GAMEB_YX
    lxi DE, wLevelBCD
    mvi A, 0
    call drawDigitsSmall

drawHigh:
    lxi BC, DISPLAY_HIGH_YX
    lxi DE, wGameStartHigh
    mvi A, 0
    call drawDigitsSmall
    jmp drawLinesCount

drawLevelGameA:
    lxi BC, DISPLAY_LEVEL_GAMEA_YX
    lxi DE, wLevelBCD
    mvi A, 1
    call drawDigitsSmall

drawScores:
    lxi BC, DISPLAY_SCORE_YX
    lxi DE, wScoresBCD
    mvi A, 5
    call drawDigitsBig

drawLinesCount:
    lxi BC, DISPLAY_LINES_YX
    lxi DE, wLinesCountBCD    
    mvi A, 3

    ;A - number of digits
    ;DE - Packed BCD pointer
    ;BC - Y, X
drawDigitsSmall:
    lxi HL, smallDigits
drawDigitsBig:
    lxi HL, bigDigits
drawDigits:
    staw wDigitsCount
    staw wSkipLeadZeroes

drawDigitsLoop:
    push HL
    ldax HL+                    ;Digit width
    add A, C
    mov C, A
    offiw wDigitsCount, 1
    jr drawDigitH
drawDigitL:
    ldax DE+
    jr drawDigit
drawDigitH:
    ldax DE
    rar
    rar
    rar
    rar
drawDigit:
    push DE
    push V
    call clearBitmap
    pop V
    oni A, 0x0F                 ;skip
    neiw wSkipLeadZeroes, 255   ;all
    aniw wSkipLeadZeroes, 0     ;leading
    dcrw wSkipLeadZeroes        ;zeroes
    jr drawDigitCopyNext
drawDigitCopy:
    ani A, 0x0F
    addnc A, L
    mvi H, (digits >> 8) + 1
    mov L, A
    addncx HL
    mvi H, (digits >> 8) + 1
    mov L, A
    call invertBitmap
drawDigitCopyNext:
    pop DE
    pop HL
    dcrw wDigitsCount
    jmp drawDigitsLoop
    ret


pauseScreen:
    call pauseSFX
    call hideNextPiece
    call writeLCDNextPiece
pauseScreenLoop:
    call parseKeyWaitPressedUp
    LXI DE, pauseText
    call writeLCDPlayfieldROM
    oniw wKeyPressedP2, PC_KEY_P2_START
    jr pauseScreenLoop
    oriw wKeyUpWaitP2, PC_KEY_P2_START
    jmp showNextPiece


animationRocket:
    call rocketSong
    call drawLaunchPadScreen

    lxi BC, 25 << 8 | 23
    lxi HL, btmLeftMast
    neiw wGameType, GAME_TYPE_B
    call invertBitmap

    mvi A, 49
    staw wAnimationY

    mvi A, 109
    staw wIndex
    jmp animationRocketSkipClearWires
animationRocketLoop:
    ltiw wIndex, 91
    jmp animationRocketSkipLiftoff

    gtiw wIndex, 58
    jmp animationRocketLiftoff
    lxi BC, 41 << 8 | 21
    lxi HL, btmFume
    neiw wGameType, GAME_TYPE_B
    lxi HL, btmFumeBuran
    call invertBitmap
    jmp animationRocketSkipLiftoff

animationRocketLiftoff:
    eqiw wIndex, 58
    jmp animationRocketSkipClearWires
    lxi BC, 25 << 8 | 28
    lxi HL, btmWires
    neiw wGameType, GAME_TYPE_B
    call invertBitmap
animationRocketSkipClearWires:

    lxi HL, btmRocketSmall
    ltiw wScoresBCDH, 0x15
    lxi HL, btmRocketMid
    ltiw wScoresBCDH, 0x20
    lxi HL, btmRocketBig
    neiw wGameType, GAME_TYPE_B
    lxi HL, btmBuran

    ldaw wAnimationY
    subx HL+
    mov B, A
    ldax HL+
    mov C, A
    push HL
    call invertBitmap
    pop HL
    neiw wIndex, 109
    jmp animationRocketSkipLiftoff
    dcrw wAnimationY
    nop
    dcr B
    nop
animationRocketLoopStart:
    call invertBitmap

    ltiw wIndex, 57
    jmp animationRocketSkipLiftoff
    ldaw wAnimationY
    adi A, 1
    mov B, A
    mvi C, 34
    neiw wGameType, GAME_TYPE_B
    mvi C, 29
    lxi HL, btmFireBigMask
    neiw wGameType, GAME_TYPE_B
    lxi HL, btmFireBigBuranMask
    call clearBitmap

    lxi BC, 49 << 8 | 28
    lxi HL, btmLaunchPad
    call clearBitmap
    lxi HL, btmLaunchPad
    call invertBitmap
    
    ldaw wAnimationY
    mov B, A
    mvi C, 34
    neiw wGameType, GAME_TYPE_B
    mvi C, 29
    lxi HL, btmFireBigMask
    neiw wGameType, GAME_TYPE_B
    lxi HL, btmFireBigBuranMask
    offiw wIndex, 1
    jr animationRocketSkipFireSmall
    lxi HL, btmFireSmallMask
    neiw wGameType, GAME_TYPE_B
    lxi HL, btmFireSmallBuranMask
animationRocketSkipFireSmall:
    call clearBitmap
    call invertBitmap
animationRocketSkipLiftoff:

    call writeLCD
    mvi A, 8
    call delayFrames
    dcrw wIndex
    jmp animationRocketLoop

    mvi A, 184
    call delayFrames

    jmp dummySilent


randomizePlayfield:
    ldaw wGameStartHigh
    add A, A
    xri A, 0xFF
    adi A, (23 - 3) + 2
    staw wPieceY
    mvi A, 3
    staw wCurPiece
randomizePlayfieldYLoop:
    ltiw wPieceY, (23 - 3) + 1
    ret
    oriw wFullLine1, 1
    mvi A, 1
    staw wPieceX
randomizePlayfieldXLoop:
    inrw wPieceX
    call randomizeAndParseKey
    oniw wSeed10, 1
    call invertPiece
    offiw wSeed10, 1
    aniw wFullLine1, 0
    eqiw wPieceX, 11
    jmp randomizePlayfieldXLoop
    offiw wFullLine1, 1
    call invertPiece
    inrw wPieceY
    jmp randomizePlayfieldYLoop



    ;HL - bitmap pointer
    ;BC - Y, X
clearBitmap:
    mvi A, DM_CLEAR
invertBitmap:
    mvi A, DM_INVERT
    staw wDrawMode
drawBitmap:
    mov A, B
    ani A, 0x07
    staw wBitmapShift
    mov A, B
    adi A, 192                  ;fix if y < 0
    rar
    rar
    rar
    ani A, 0x1F
    adi A, (DISPLAY >> 8) - (192 >> 3)
    staw wScreenLine

    ldax HL+
    dcr A
drawBitmapLoopY:
    staw wBitmapWidth
    push BC
drawBitmapLoopX:
    ldaw wBitmapShift
    mov B, A

    ldax HL+
    mov D, A
    mvi E, 0
    jr drawBitmapShiftLoopStart
drawBitmapShiftLoop:
    mov A, D
    add A, A
    mov D, A
    mov A, E
    ral
    mov E, A
drawBitmapShiftLoopStart:
    dcr B
    jr drawBitmapShiftLoop

    ldaw wScreenLine
    mov B, A
    mov A, D

    offiw wDrawMode, DM_INVERT
    jr drawBitmapXorBC_A

drawBitmapNandBC_A:
    xri A, 0xFF
    anax BC
    stax BC
    inr B
    mov A, E
    xri A, 0xFF
    anax BC
    jr drawBitmapLoopXNext

drawBitmapXorBC_A:
    xrax BC
    stax BC
    inr B
    ldax BC
    xra A, E

drawBitmapLoopXNext:
    stax BC
    inr C
    dcrw wBitmapWidth
    jmp drawBitmapLoopX

    pop BC
    inrw wScreenLine

    ldax HL+
    dcr A
    jmp drawBitmapLoopY
    ret


delayFrames:
delayFramesLoop:
    push V
delayOneFrameLoop:
    gtiw wCounterH, 0x0C
    jr delayOneFrameLoop
    di
    ldaw wCounterL
    sui A, 0x44
    staw wCounterL
    ldaw wCounterH
    sbi A, 0x0C
    staw wCounterH
    ei

    pop V
    dcr A
    jr delayFramesLoop
    ret


clearLinesPrepareBC:
    ;get next clear
    ldax DE+
    offax BC
    oriw wClearFlags, 0x1
    ;set clear
    oniw wClearFlags, 0x2
    jr clearLinesPrepareBCClear
clearLinesPrepareBCAdd:
    orax BC
    jr clearLinesPrepareBCSkip
clearLinesPrepareBCClear:
    xri A, 0xFF
    anax BC
clearLinesPrepareBCSkip:
    stax BC
    ret


levelUpSFX:
    lxi HL, levelUpSFXData
    oriw wFlags, F_SFX_BLOCK
    jmp soundFX
gameBWinSong:
    lxi HL, gameBWinData
dancersSong:
    lxi HL, dancersSongData
titleTheme:
    lxi HL, titleThemeData
dummySilent:
    lxi HL, dummySilentData
rocketSong:
    lxi HL, rocketSongData
pauseSFX:
    lxi HL, pauseSFXData
menuNavSFX:
    lxi HL, menuNavSFXData
gameOverSFX:
    lxi HL, gameOverSFXData
lineClear4SFX:
    lxi HL, lineClear4SFXData
lineClearSFX:
    lxi HL, lineClearSFXData
pieceLandedSFX:
    lxi HL, pieceLandedSFXData
rotateSFX:
    lxi HL, rotateSFXData
pieceMoveSFX:
    lxi HL, pieceMoveSFXData
    offiw wFlags, F_SFX_BLOCK
    ret
soundFX:
    shld wNoteSheetPtr
    aniw wNoteValue, 0
    ret


drawPlayfieldSmooth:
    mvi A, 7
    staw wIndex
drawPlayfieldSmoothLoop: 
    ldaw wIndex
    adi A, DISPLAY >> 8
    mov D, A
    mvi E, 8

drawPlayfieldSmoothXLoop:
    ldax HL-
    stax DE+
    mov A, E
    eqi A, 38
    jr drawPlayfieldSmoothXLoop

    push HL
    call writeLCDPlayfield
    pop HL

    mvi A, 2
    call delayFrames

    dcrw wIndex
    jmp drawPlayfieldSmoothLoop
    ret


drawLaunchPadScreen:
    lxi HL, launchPadScreen
drawGameAMenu:
    lxi HL, gameAMenu
drawGameBMenu:
    lxi HL, gameBMenu
drawTitleScreen:
    lxi HL, titleScreen
drawGameAScreen:
    lxi HL, gameAScreen
drawGameBScreen:
    lxi HL, gameBScreen
    mvi B, DISPLAY >> 8
drawScreenYLoop:
    mvi C, 74
drawScreenXLoop:
    ldax HL+
    stax BC
    dcr C
    jr drawScreenXLoop
    inr B
    mov A, B
    eqi A, DISPLAY >> 8 + 8
    jr drawScreenYLoop
    ret


setupLCD:
    mvi A, LCD_DATA_DOWN
    mov PB, A
    mvi A, LCD_T | LCD_E
    mov PA, A
    ani PA, ~LCD_E
    ret


writeLCDPlayfieldROM:
    lxi BC, 0x29 << 8 | 5
    call drawTopLeftLine_
    lxi BC, 0x69 << 8 | 5
    call drawTopLeftLine_
    lxi BC, 0xA9 << 8 | 5
    call drawTopLeftLine_
    lxi BC, 0xE9 << 8 | 5
    call drawTopLeftLine_
    lxi BC, 0x08 << 8 | 5
    call drawBottomLeftLine_ 
    lxi BC, 0x48 << 8 | 5
    call drawBottomLeftLine_
    lxi BC, 0x88 << 8 | 5
    call drawBottomLeftLine_
    lxi BC, 0xC8 << 8 | 5
    jmp drawBottomLeftLine_


writeLCDPlayfield:
    lxi DE, DISPLAY - 256

    lxi BC, 0x29 << 8 | 5
    call drawTopLeftLine8
    lxi BC, 0x69 << 8 | 5
    call drawTopLeftLine8
    lxi BC, 0xA9 << 8 | 5
    call drawTopLeftLine8
    lxi BC, 0xE9 << 8 | 5
    call drawTopLeftLine8
    lxi BC, 0x08 << 8 | 5
    call drawBottomLeftLine8
    lxi BC, 0x48 << 8 | 5
    call drawBottomLeftLine8
    lxi BC, 0x88 << 8 | 5
    call drawBottomLeftLine8
    lxi BC, 0xC8 << 8 | 5
    jmp drawBottomLeftLine8

writeLCDNextPiece:
    lxi DE, DISPLAY + 256 * 6 + 55
    lxi BC, 0x9E << 8 | 2
    call drawRightLine
    lxi DE, DISPLAY + 256 * 7 + 55
    lxi BC, 0xDE << 8 | 2
    jmp drawRightLine

writeLCD:
    LXI DE, DISPLAY - 256

    lxi BC, 0x31 << 8 | 9
    call drawTopLeftLine 
    lxi BC, 0x00 << 8 | 4
    call drawRightLine
    lxi BC, 0x71 << 8 | 9
    call drawTopLeftLine 
    lxi BC, 0x40 << 8 | 4
    call drawRightLine
    lxi BC, 0xB1 << 8 | 9
    call drawTopLeftLine 
    lxi BC, 0x80 << 8 | 4
    call drawRightLine
    lxi BC, 0xF1 << 8 | 9
    call drawTopLeftLine 
    lxi BC, 0xC0 << 8 | 4
    call drawRightLine
    lxi BC, 0x00 << 8 | 9
    call drawBottomLeftLine
    lxi BC, 0x19 << 8 | 4
    call drawRightLine
    lxi BC, 0x40 << 8 | 9
    call drawBottomLeftLine
    lxi BC, 0x59 << 8 | 4
    call drawRightLine
    lxi BC, 0x80 << 8 | 9
    call drawBottomLeftLine
    lxi BC, 0x99 << 8 | 4
    call drawRightLine
    lxi BC, 0xC0 << 8 | 9
    call drawBottomLeftLine
    lxi BC, 0xD9 << 8 | 4
    jr drawRightLine


drawTopLeftLine8:
    lxi HL, (LCD_T | LCD_D | LCD_E) << 8 | LCD_T | LCD_D
drawBottomLeftLine8:
    lxi HL, (LCD_B | LCD_D | LCD_E) << 8 | LCD_B | LCD_D
    mov A, D
    inr A
    mov D, A
    mvi E, 8
    jr drawCcols  

drawTopLeftLine:
    mvi E, 255
    inx DE
drawTopLeftLine_:
    lxi HL, (LCD_T | LCD_D | LCD_E) << 8 | LCD_T | LCD_D
    jr drawCcols  
drawBottomLeftLine:
    mvi E, 255
    inx DE
drawBottomLeftLine_:
    lxi HL, (LCD_B | LCD_D | LCD_E) << 8 | LCD_B | LCD_D
drawRightLine:
    lxi HL, (LCD_R | LCD_D | LCD_E) << 8 | LCD_R | LCD_D

drawCcols:
    mov A, B
    mov PB, A 
    mvi A, LCD_T | LCD_B | LCD_R | LCD_E
    mov PA, A
    ani PA, ~LCD_E
drawCcols_loop:
    REPT 5
    ldax DE+
    mov PB, A
    mov A, H
    mov PA, A
    mov A, L
    mov PA, A
    ENDM
    dcr C
    jmp drawCcols_loop
    ret


digits:
bigDigits:
    db 5          ;width
bigDigitsMask:
    db 4
    db 0b111111
    db 0b111111
    db 0b111111
    db 0b111111
    db 0
bigDigitsPtrs:
    db bigDigits0 - $
    db bigDigits1 - $
    db bigDigits2 - $
    db bigDigits3 - $
    db bigDigits4 - $
    db bigDigits5 - $
    db bigDigits6 - $
    db bigDigits7 - $
    db bigDigits8 - $
    db bigDigits9 - $
bigDigits0:
    db 4
    db 0b011110
    db 0b100001
    db 0b111111
    db 0b011110
    db 0
bigDigits1:
    db 4
    db 0b100010
    db 0b111111
    db 0b111111
    db 0b100000
    db 0
bigDigits2:
    db 4
    db 0b110010
    db 0b111001
    db 0b101111
    db 0b100110
    db 0
bigDigits3:
    db 4
    db 0b100001
    db 0b100101
    db 0b111111
    db 0b011010
    db 0
bigDigits4:
    db 4
    db 0b001111
    db 0b001000
    db 0b111111
    db 0b111111
    db 0
bigDigits5:
    db 4
    db 0b100111
    db 0b100101
    db 0b111101
    db 0b011000
    db 0
bigDigits6:
    db 4
    db 0b011110
    db 0b111111
    db 0b100101
    db 0b011000
    db 0
bigDigits7:
    db 4
    db 0b000001
    db 0b111001
    db 0b111101
    db 0b000011
    db 0
bigDigits8:
    db 4
    db 0b011010
    db 0b100101
    db 0b111111
    db 0b011010
    db 0
bigDigits9:
    db 4
    db 0b000110
    db 0b101001
    db 0b111111
    db 0b011110
    db 0

smallDigits:
    db 4          ;width
smallDigitsMask:
    db 3
    db 0b00011111
    db 0b00011111
    db 0b00011111
    db 0
smallDigitsPtrs:
    db smallDigits0 - $
    db smallDigits1 - $
    db smallDigits2 - $
    db smallDigits3 - $
    db smallDigits4 - $
    db smallDigits5 - $
    db smallDigits6 - $
    db smallDigits7 - $
    db smallDigits8 - $
    db smallDigits9 - $
smallDigits0:
    db 3
    db 0b00011111
    db 0b00010001
    db 0b00011111
    db 0
smallDigits1:
    db 3
    db 0b00010010
    db 0b00011111
    db 0b00010000
    db 0
smallDigits2:
    db 3
    db 0b00011101
    db 0b00010101
    db 0b00010111
    db 0
smallDigits3:
    db 3
    db 0b00010101
    db 0b00010101
    db 0b00011111
    db 0
smallDigits4:
    db 3
    db 0b00001111
    db 0b00001000
    db 0b00011111
    db 0
smallDigits5:
    db 3
    db 0b00010111
    db 0b00010101
    db 0b00011101
    db 0
smallDigits6:
    db 3
    db 0b00011111
    db 0b00010101
    db 0b00011101
    db 0
smallDigits7:
    db 3
    db 0b00000001
    db 0b00011101
    db 0b00000011
    db 0
smallDigits8:
    db 3
    db 0b00011111
    db 0b00010101
    db 0b00011111
    db 0
smallDigits9:
    db 3
    db 0b00010111
    db 0b00010101
    db 0b00011111
    db 0


gameAScreen:
    db 0x5F, 0x2F, 0x5F, 0x03, 0x45, 0x55, 0x7D, 0x7D, 0x01, 0x69, 0x15, 0x7D, 0x7D, 0x01, 0x39, 0x45, 0x7D, 0x39, 0x01, 0x29, 0x45, 0x7D, 0x39, 0x01, 0x35, 0x75, 0x5D, 0x49, 0x03, 0x5F, 0x2F, 0x5F, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFA, 0xFA, 0xFA, 0xFA, 0x3A, 0x1A, 0x1A, 0x1A, 0xDA, 0x1A, 0x5A, 0xDA, 0xDA, 0x1A, 0xDA, 0x1A, 0xDA, 0x1A, 0x1A, 0x5A, 0xDA, 0xDA, 0x1A, 0x1A, 0x1A, 0xDA, 0x1A, 0x3A, 0xFA, 0xFA, 0xFA, 0xFA, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x02, 0x02, 0x03, 0x00, 0x02, 0x02, 0x03, 0x00, 0x01, 0x02, 0x01, 0x00, 0x00, 0x02, 0x02, 0x03, 0x00, 0x02, 0x02, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x02, 0x2A, 0x5A, 0x52, 0x02, 0x4A, 0x5A, 0x7A, 0x02, 0x7A, 0x22, 0x12, 0x7A, 0x02, 0x4A, 0x7A, 0x4A, 0x02, 0x42, 0x42, 0x7A, 0x02, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xF9, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0xF9, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xCF, 0x90, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0x90, 0xCF, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF

gameBScreen:
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x03, 0x43, 0x43, 0x7B, 0x03, 0x4B, 0x5B, 0x7B, 0x03, 0x3B, 0x43, 0x3B, 0x03, 0x03, 0x4B, 0x5B, 0x7B, 0x03, 0x43, 0x43, 0x7B, 0x03, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x04, 0x1E, 0x00, 0x1A, 0x12, 0x0C, 0x00, 0x12, 0x1E, 0x12, 0x00, 0x1E, 0x04, 0x1E, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x03, 0x2B, 0x5B, 0x53, 0x03, 0x4B, 0x5B, 0x7B, 0x03, 0x7B, 0x23, 0x13, 0x7B, 0x03, 0x4B, 0x7B, 0x4B, 0x03, 0x43, 0x43, 0x7B, 0x03, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xF9, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0xF9, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xCF, 0x90, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0x90, 0xCF, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xEE, 0xBB, 0xEE, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xEE, 0xBB, 0xEE, 0x00, 0xFF, 0xFF, 0xFF

gameAMenu:
    db 0xFF, 0x01, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x05, 0x01, 0x15, 0x51, 0xF5, 0xF1, 0x05, 0x61, 0x95, 0xF1, 0xF5, 0x01, 0x75, 0xC1, 0xF5, 0x71, 0x05, 0x11, 0xF5, 0xF1, 0x15, 0x41, 0x45, 0x01, 0xE5, 0x91, 0xF5, 0xE1, 0x05, 0x01, 0x55, 0x01, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x54, 0xA8, 0x55, 0xA9, 0x55, 0xA9, 0x54, 0xA8, 0x54, 0xA9, 0x55, 0xA8, 0x54, 0xA9, 0x55, 0xA8, 0x54, 0xA8, 0x55, 0xA9, 0x54, 0xA8, 0x54, 0xA8, 0x55, 0xA8, 0x55, 0xA9, 0x54, 0xA8, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xFE, 0x83, 0x01, 0x41, 0x41, 0x7D, 0x7D, 0x01, 0x45, 0x55, 0x7D, 0x7D, 0x01, 0x3D, 0x61, 0x7D, 0x3D, 0x01, 0x45, 0x55, 0x7D, 0x7D, 0x01, 0x41, 0x41, 0x7D, 0x7D, 0x01, 0x82, 0x7D, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xFA, 0x0D, 0x0A, 0xED, 0x0A, 0xED, 0x0A, 0x0D, 0xFB, 0x0D, 0x0B, 0xED, 0xAB, 0x2D, 0x0B, 0x0D, 0xFB, 0x0D, 0x0B, 0xED, 0xAB, 0xAD, 0x0B, 0x0D, 0xFB, 0x0D, 0x0B, 0x0D, 0xEB, 0x4D, 0x0B, 0x0D, 0xFB, 0x0D, 0x0A, 0xED, 0x2A, 0xED, 0x0A, 0x0D, 0xFA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xFF, 0x08, 0x08, 0xEB, 0xA9, 0xE9, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xEB, 0xAA, 0xEA, 0x08, 0x08, 0xFF, 0x08, 0x08, 0x6A, 0xAA, 0x2B, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xAA, 0xAB, 0xEA, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xAB, 0xAA, 0xEB, 0x08, 0x08, 0xFF, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5A, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5B, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x58, 0xAB, 0x58, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5B, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5A, 0xA8, 0x58, 0xAF, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00, 0xFF
    db 0xFF, 0x80, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0x80, 0xFF

gameBMenu:
    db 0xFF, 0x01, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xA9, 0x05, 0x01, 0x15, 0x51, 0xF5, 0xF1, 0x05, 0x61, 0x95, 0xF1, 0xF5, 0x01, 0x75, 0xC1, 0xF5, 0x71, 0x05, 0x11, 0xF5, 0xF1, 0x15, 0x41, 0x45, 0x01, 0xA5, 0x51, 0xF5, 0xF1, 0x05, 0x01, 0x55, 0x01, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x54, 0xA8, 0x55, 0xA9, 0x55, 0xA9, 0x54, 0xA8, 0x54, 0xA9, 0x55, 0xA8, 0x54, 0xA9, 0x55, 0xA8, 0x54, 0xA8, 0x55, 0xA9, 0x54, 0xA8, 0x54, 0xA8, 0x54, 0xA9, 0x55, 0xA9, 0x54, 0xA8, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x7D, 0x82, 0x01, 0x7D, 0x11, 0x7D, 0x7D, 0x01, 0x75, 0x45, 0x7D, 0x39, 0x01, 0x7D, 0x7D, 0x01, 0x7D, 0x11, 0x7D, 0x7D, 0x01, 0x82, 0x7D, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xFE, 0x83, 0x01, 0x41, 0x41, 0x7D, 0x7D, 0x01, 0x45, 0x55, 0x7D, 0x7D, 0x01, 0x3D, 0x61, 0x7D, 0x3D, 0x01, 0x45, 0x55, 0x7D, 0x7D, 0x01, 0x41, 0x41, 0x7D, 0x7D, 0x01, 0x82, 0x7D, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xFA, 0x0D, 0x0A, 0xED, 0xAB, 0xAD, 0x0B, 0x0D, 0xFB, 0x0D, 0x0B, 0x0D, 0xEB, 0x4D, 0x0B, 0x0D, 0xFB, 0x0D, 0x0B, 0xED, 0x2B, 0xED, 0x0A, 0x0D, 0xFA, 0x55, 0xAA, 0x55, 0xFA, 0x0D, 0x0A, 0xED, 0x0A, 0xED, 0x0A, 0x0D, 0xFB, 0x0D, 0x0B, 0xED, 0xAB, 0x2D, 0x0B, 0x0D, 0xFB, 0x0D, 0x0B, 0xED, 0xAB, 0xAD, 0x0B, 0x0D, 0xFB, 0x0D, 0x0B, 0x0D, 0xEB, 0x4D, 0x0B, 0x0D, 0xFB, 0x0D, 0x0A, 0xED, 0x2A, 0xED, 0x0A, 0x0D, 0xFA, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xFF, 0x08, 0x08, 0xAA, 0xAA, 0xEB, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xEA, 0x0B, 0xEA, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xEB, 0xAA, 0x2B, 0x08, 0x08, 0xFF, 0x55, 0xAA, 0x55, 0xFF, 0x08, 0x08, 0xEB, 0xA9, 0xE9, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xEB, 0xAA, 0xEA, 0x08, 0x08, 0xFF, 0x08, 0x08, 0x6A, 0xAA, 0x2B, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xAA, 0xAB, 0xEA, 0x08, 0x08, 0xFF, 0x08, 0x08, 0xAB, 0xAA, 0xEB, 0x08, 0x08, 0xFF, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5A, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xA9, 0x59, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5A, 0xA8, 0x58, 0xAF, 0x55, 0xAA, 0x55, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5A, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5B, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x58, 0xAB, 0x58, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5B, 0xA8, 0x58, 0xAF, 0x58, 0xA8, 0x5B, 0xAA, 0x5A, 0xA8, 0x58, 0xAF, 0x55, 0x00, 0xFF
    db 0xFF, 0x00, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0x00, 0xFF
    db 0xFF, 0x80, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0xAA, 0x95, 0x80, 0xFF

titleScreen:
    db 0xFF, 0xFF, 0xAB, 0x57, 0xFB, 0x17, 0x1B, 0x17, 0x1B, 0x17, 0x1B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x9B, 0x17, 0x1B, 0x97, 0x9B, 0x97, 0x1B, 0x17, 0x1B, 0x97, 0x9B, 0x97, 0x1B, 0x97, 0x9B, 0x97, 0x1B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x1B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x1B, 0x97, 0x9B, 0x97, 0x1B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x9B, 0x97, 0x1B, 0x17, 0x1B, 0x17, 0xFB, 0x57, 0xAB, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xAA, 0x55, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9F, 0xCA, 0xE5, 0xF2, 0xDD, 0x6A, 0x35, 0x00, 0xEB, 0xD5, 0xEB, 0x00, 0x1E, 0x35, 0x6A, 0x55, 0x7F, 0x00, 0xEB, 0xD5, 0xEB, 0x00, 0x0F, 0x05, 0x02, 0x01, 0xEA, 0xD5, 0xEA, 0x01, 0x02, 0x05, 0x0F, 0x00, 0x0F, 0x05, 0xF2, 0xE1, 0x40, 0x00, 0xEB, 0xD5, 0xEB, 0x00, 0x0F, 0x05, 0x02, 0x01, 0xEA, 0xD5, 0xEA, 0x01, 0x02, 0x05, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x55, 0xAA, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xAA, 0x55, 0xBF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xCF, 0xDF, 0xC7, 0xD3, 0xD9, 0xDC, 0xDE, 0xDF, 0xC0, 0xDF, 0xDF, 0xDF, 0xC0, 0xD0, 0xD8, 0xDC, 0xDE, 0xDF, 0xC0, 0xDF, 0xDF, 0xDF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xDF, 0xDF, 0xDF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xDF, 0xDE, 0xDD, 0xD8, 0xD0, 0xC0, 0xDF, 0xDF, 0xDF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xDF, 0xDF, 0xDF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xBF, 0x55, 0xAA, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFE, 0xFF, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x65, 0x65, 0x05, 0x05, 0x01, 0x19, 0xE5, 0x19, 0x01, 0x05, 0x05, 0x05, 0x25, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x45, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x85, 0x45, 0x25, 0x25, 0x25, 0x45, 0x85, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0xFF, 0xFE, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x60, 0x90, 0x60, 0x00, 0x00, 0x80, 0xC0, 0x20, 0x90, 0xE8, 0x34, 0x0A, 0xF5, 0xCA, 0x94, 0x28, 0xD0, 0xA0, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x08, 0x08, 0x08, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
    db 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xE0, 0xB0, 0xE8, 0xD7, 0xA8, 0xD0, 0xB8, 0xE7, 0xDF, 0xB0, 0xEF, 0xFF, 0xA0, 0xFC, 0xAF, 0xA7, 0xA3, 0xB0, 0xEF, 0xB7, 0xD8, 0xE7, 0xC0, 0xF0, 0xC0, 0xF0, 0xFF, 0xF0, 0x80, 0x98, 0xFC, 0xFC, 0x98, 0x80, 0xF0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0xFF
    db 0x01, 0x01, 0x01, 0x69, 0x55, 0x7D, 0x7D, 0x01, 0x11, 0x11, 0x01, 0x45, 0x55, 0x7D, 0x7D, 0x01, 0x7D, 0x09, 0x11, 0x79, 0x7D, 0x01, 0x79, 0x25, 0x7D, 0x79, 0x01, 0x31, 0x75, 0x45, 0x7D, 0x39, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x25, 0x7D, 0x79, 0x01, 0x11, 0x11, 0x01, 0x45, 0x55, 0x7D, 0x7D, 0x01, 0x7D, 0x09, 0x11, 0x79, 0x7D, 0x01, 0x79, 0x25, 0x7D, 0x79, 0x01, 0x31, 0x75, 0x45, 0x7D, 0x39, 0x01, 0x01, 0x01, 0x01, 0x01
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x0A, 0x3E, 0x00, 0x1E, 0x28, 0x26, 0x00, 0x26, 0x2A, 0x32, 0x00, 0x3C, 0x0A, 0x3E, 0x00, 0x00, 0x00, 0x34, 0x2A, 0x22, 0x00, 0x2C, 0x2A, 0x3A, 0x00, 0x3C, 0x22, 0x1E, 0x00, 0x24, 0x2A, 0x3A;, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ;
pauseText:
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x10, 0x7C, 0x00, 0x7C, 0x00, 0x04, 0x7C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xA8, 0x68, 0x00, 0x08, 0xF9, 0x08, 0x01, 0xF8, 0x29, 0xF0, 0x01, 0xF8, 0x29, 0xD0, 0x00, 0x08, 0xF8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x12, 0xF0, 0x12, 0x00, 0xF2, 0x10, 0xE2, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0xE0, 0x20, 0x00, 0xE0, 0x20, 0xC0, 0x00, 0xE0, 0x20, 0xC0, 0x00, 0x25, 0xE0, 0x24, 0x00, 0xE5, 0x01, 0xE4, 0x20, 0xC0, 0x00, 0xE0, 0x00, 0xE0, 0x00, 0xE0, 0xA0, 0x20, 0x00
    db 0x00, 0x0B, 0x02, 0x08, 0x01, 0x0A, 0x83, 0x48, 0x43, 0x08, 0xC3, 0x48, 0x80, 0x0B, 0xC0, 0x48, 0x83, 0x48, 0x83, 0x08, 0xC3, 0x48, 0x41, 0x0A, 0x03, 0x08, 0x03, 0x0A, 0x02, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x04, 0x16, 0x00, 0x17, 0x01, 0x17, 0x00, 0x17, 0x00, 0x17, 0x00, 0x17, 0x00, 0x17, 0x05, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ;db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ;
launchPadScreen:
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xAA, 0x56, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xAA, 0x55, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xAA, 0x55, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x80, 0xC0, 0xF8, 0xE0, 0xC0, 0xF0, 0xE0, 0xE0, 0x80, 0xE0, 0xC0, 0xF8, 0xE0, 0xC0, 0xF0, 0xE0, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFE, 0x96, 0x9B, 0xFE, 0xF3, 0x93, 0x92, 0xF2, 0xF2, 0x92, 0x92, 0xF2, 0xF2, 0x92, 0x92, 0xF2, 0xF2, 0xF2, 0x92, 0x92, 0xF2, 0xF2, 0x92, 0x92, 0xF2, 0xF2, 0x92, 0x92, 0xF2, 0xFE, 0x96, 0x9A, 0xFE, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80
    db 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE, 0xFC, 0xFA, 0xFE

gameOverText:
    db 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x00, 0xFE, 0x01, 0x00, 0x94, 0xFC, 0xFC, 0x00, 0xFC, 0x08, 0x10, 0xF8, 0xFC, 0x00, 0xF8, 0x14, 0xFC, 0xFC, 0x00, 0x68, 0xA4, 0x84, 0xFC, 0x78, 0x00, 0x01, 0xFE, 0x00, 0x00
    db 0x00, 0x00, 0xFF, 0x00, 0x00, 0xD2, 0x2A, 0xFA, 0xFA, 0x02, 0x2A, 0xFA, 0xFA, 0x02, 0x7A, 0x82, 0x82, 0xFA, 0x7A, 0x02, 0xF2, 0x0A, 0x0A, 0xFA, 0xF2, 0x00, 0x00, 0xFF, 0x00, 0x00
    db 0x00, 0x00, 0x0F, 0x10, 0x20, 0x25, 0x24, 0x25, 0x25, 0x24, 0x25, 0x25, 0x25, 0x24, 0x24, 0x24, 0x25, 0x24, 0x24, 0x24, 0x24, 0x25, 0x25, 0x25, 0x24, 0x20, 0x10, 0x0F, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x0F, 0x20, 0x0E, 0x2B, 0x00, 0xAF, 0x02, 0xAF, 0x00, 0x2A, 0x8F, 0xA0, 0x08, 0xAF, 0x80, 0xA3, 0x04, 0x2F, 0x00, 0x00
    db 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x80, 0x00, 0x00, 0x80, 0xA3, 0x0C, 0x23, 0x80, 0xAB, 0x04, 0x2F, 0x80, 0xA0, 0x0F, 0x20, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x03, 0x04, 0x09, 0x04, 0x03, 0x00, 0x2F, 0x00, 0x2F, 0x00, 0x2F, 0x00, 0x2F, 0x02, 0x2F, 0x00, 0x2D, 0x08, 0x27, 0x00, 0x2F, 0x02, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

gameOverBriks:
    db 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF
    db 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF
    db 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF
    db 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF
    db 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF
    db 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF, 0xB6, 0x24, 0xFF
    db 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF, 0x6D, 0x49, 0xFF
    db 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF, 0xDB, 0x92, 0xFF
gameOverBriksEnd:

gameBScoreCount:
    db 0x00, 0x00, 0xE0, 0x20, 0xE0, 0x00, 0x00, 0x00, 0x09, 0x0B, 0x0F, 0x00, 0x08, 0x0F, 0x00, 0x0D, 0x09, 0x06, 0x00, 0x0F, 0x04, 0x02, 0x0F, 0x00, 0x0F, 0x00, 0x05, 0x0B, 0x0A, 0x00
    db 0x00, 0x00, 0x03, 0x02, 0x03, 0x00, 0x00, 0x48, 0x58, 0x78, 0x00, 0x40, 0x78, 0x00, 0x70, 0x58, 0x78, 0x00, 0x78, 0x40, 0x78, 0x00, 0x70, 0x48, 0x38, 0x00, 0x30, 0x48, 0x78, 0x00
    db 0x00, 0x00, 0x1F, 0x11, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x40, 0xC0, 0xC0, 0x00, 0x00, 0xC0, 0x00, 0x80, 0x40, 0xC0, 0x00, 0xC0, 0x00, 0x80, 0x40, 0xC0, 0x00, 0x40, 0xC0, 0x40, 0x00
    db 0x00, 0x00, 0xF8, 0x88, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x03, 0x00, 0x02, 0x03, 0x00, 0x00, 0x01, 0x03, 0x00, 0x03, 0x00, 0x02, 0x01, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00
    db 0x00, 0x00, 0xC0, 0x40, 0xC0, 0x00, 0x00, 0x00, 0x0A, 0x16, 0x14, 0x00, 0x1E, 0x00, 0x14, 0x0A, 0x1E, 0x00, 0x02, 0x1E, 0x02, 0x00, 0x12, 0x16, 0x1E, 0x00, 0x02, 0x1E, 0x02, 0x00
    db 0x00, 0x00, 0x07, 0x04, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xB0, 0xA0, 0x00, 0x20, 0x50, 0xF0, 0x00, 0xE0, 0x90, 0x70, 0x00, 0xA0, 0x50, 0xF0, 0x00, 0x60, 0x90, 0xF0, 0x00
    db 0x00, 0x00, 0x3E, 0x22, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x00, 0x01, 0xF8, 0x89, 0xF8, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00
gameBScoreCountEnd:

gameBDancefloor:
    db 0x45, 0x82, 0x09, 0x02, 0x05, 0x02, 0x09, 0x02, 0x05, 0x02, 0x09, 0x02, 0x05, 0x02, 0x09, 0x02, 0x05, 0x02, 0x09, 0x02, 0x05, 0x02, 0x09, 0x02, 0x05, 0x02, 0x09, 0x02, 0x05, 0x02
    db 0xEE, 0xD1, 0x20, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x5F, 0xD7, 0x73, 0x0C, 0x03, 0x00, 0x00, 0x00, 0x38, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8
    db 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0xEE, 0xBB, 0xEE, 0xBB, 0xEE, 0xBB, 0xEE
    db 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    db 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x03, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E, 0x0B, 0x0E
    db 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0xE8, 0xB8, 0x80, 0x86, 0xEF, 0xEF, 0xEF, 0x86, 0xF0, 0x80, 0xE0, 0xF8, 0xF8, 0xC0
gameBDancefloorEnd:

dummySilentData:
    db (16 << 4) & 0xF0 | 7, 16, 255
    db 8, dummySilentData & 0xFF, (dummySilentData >> 8) & 0xFF

titleThemeData:
    DB 0x00, 133, 218
    DB 0x84, 24, 25
    DB 0x00, 126, 230
    DB 0xa4, 26, 23
    DB 0x00, 133, 218
    DB 0x84, 24, 25
    DB 0x00, 126, 241
    DB 0xa4, 26, 23
    DB 0x00, 150, 193
    DB 0x14, 33, 18
    DB 0x00, 74, 22, 251, 251
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x03, 253, 143
    DB 0x84, 24, 3
    DB 0x14, 49, 1
    DB 0x03, 253, 137
    DB 0x00, 133, 229
    DB 0x84, 24, 25
    DB 0x00, 126, 230
    DB 0xa4, 26, 23
    DB 0x00, 133, 218
    DB 0x84, 24, 25
    DB 0x00, 126, 241
    DB 0xa4, 26, 19
    DB 0x00, 150, 203
    DB 0x24, 66, 9
    DB 0x00, 74, 22, 251, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x03, 254, 148
    DB 0x84, 24, 3
    DB 0x14, 49, 1
    DB 0x03, 253, 137
    DB 0x14, 49, 48
    DB 0x03, 243, 5
    DB 0x00, 94, 55, 251
    DB 0x03, 249, 40
    DB 0x14, 49, 47
    DB 0x03, 243, 5
    DB 0x00, 100, 37, 251
    DB 0x03, 249, 40
    DB 0x24, 66, 36
    DB 0x00, 112, 19, 251
    DB 0x03, 249, 40
    DB 0x24, 66, 35
    DB 0x03, 243, 5
    DB 0x00, 112, 6, 251
    DB 0x03, 249, 40
    DB 0x00, 112, 180
    DB 0x00, 100, 188
    DB 0x00, 112, 19, 251
    DB 0xf4, 31, 16
    DB 0x03, 243, 5
    DB 0x00, 112, 6, 251
    DB 0x74, 55, 9
    DB 0x03, 243, 5
    DB 0x00, 150, 193
    DB 0xf4, 31, 19
    DB 0x00, 133, 195, 251
    DB 0x03, 253, 139, 251
    DB 0x00, 126, 230
    DB 0xe4, 46, 13
    DB 0x00, 112, 19, 251
    DB 0x14, 49, 12
    DB 0x00, 126, 230
    DB 0xe4, 46, 13
    DB 0x00, 112, 6, 251
    DB 0x14, 49, 12
    DB 0x00, 133, 218
    DB 0x14, 49, 12
    DB 0x00, 66, 85, 251, 251
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x03, 253, 143
    DB 0x84, 24, 3
    DB 0x14, 49, 1
    DB 0x03, 253, 143
    DB 0x00, 126, 230
    DB 0xe4, 46, 13
    DB 0x00, 112, 19, 251
    DB 0x14, 49, 10
    DB 0x00, 126, 241
    DB 0xe4, 46, 13
    DB 0x00, 112, 6, 251
    DB 0x14, 49, 12
    DB 0x00, 133, 218
    DB 0x14, 49, 12
    DB 0x00, 66, 85, 251, 251
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x03, 253, 143
    DB 0x84, 24, 3
    DB 0x14, 49, 1
    DB 0x03, 253, 143
    DB 0x74, 55, 42
    DB 0x03, 243, 5
    DB 0x00, 62, 123, 251, 251
    DB 0x74, 55, 43
    DB 0x03, 243, 5
    DB 0x00, 66, 85, 251, 251
    DB 0x14, 49, 47
    DB 0x03, 243, 5
    DB 0x00, 74, 22, 251, 251
    DB 0x14, 49, 48
    DB 0x00, 74, 42, 251, 251
    DB 0x14, 49, 47
    DB 0x03, 243, 5
    DB 0x00, 74, 20, 251
    DB 0x00, 66, 31, 251
    DB 0x00, 74, 20, 251
    DB 0x14, 49, 23
    DB 0x00, 79, 3, 251
    DB 0x54, 37, 33
    DB 0x00, 74, 24, 251, 251, 251
    DB 0x03, 254, 143, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 79
    DB 0x00, 178, 114
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 232
    DB 0x03, 253, 114
    DB 0x54, 37, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0x00, 150, 9, 251
    DB 0x54, 37, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x00, 178, 7
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 178, 204
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x00, 225, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 70
    DB 0x00, 200, 101
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 161
    DB 0x03, 254, 154
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 45
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 45
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x03, 243, 5
    DB 0x00, 159, 246
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x00, 159, 8
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 159, 100
    DB 0x00, 150, 125
    DB 0x00, 200, 6
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 181
    DB 0x03, 254, 154
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 62
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0x00, 238, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 238, 66
    DB 0x00, 200, 94
    DB 0x00, 238, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 238, 152
    DB 0x03, 254, 154
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0x54, 37, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x00, 200, 203
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 86
    DB 0x00, 178, 105
    DB 0x00, 225, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 155
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 43
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x34, 19, 49
    DB 0x24, 18, 66
    DB 0x34, 19, 4
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x34, 19, 109
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x03, 243, 5
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x04, 16, 144
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 161
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0x03, 254, 154
    DB 0x00, 238, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 238, 152
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0x03, 254, 154
    DB 0x54, 37, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 79
    DB 0x00, 178, 114
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 181
    DB 0x03, 254, 154
    DB 0x00, 112, 12
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 112, 71, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 112, 71, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0x00, 119, 77, 251
    DB 0x54, 37, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x00, 178, 7
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 178, 204
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x03, 253, 160
    DB 0x00, 100, 14
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 100, 95, 251
    DB 0x74, 55, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 112, 71, 251
    DB 0x03, 254, 154
    DB 0x74, 55, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x00, 225, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 70
    DB 0x00, 200, 101
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 161
    DB 0x03, 254, 154
    DB 0x00, 133, 10
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 133, 20, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 133, 9, 251
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x03, 243, 5
    DB 0x00, 159, 246
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x00, 159, 8
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 159, 100
    DB 0x00, 150, 125
    DB 0x00, 200, 6
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 181
    DB 0x03, 254, 154
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 119, 64, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 119, 40, 251
    DB 0x54, 37, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 243, 5
    DB 0x00, 238, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 238, 66
    DB 0x00, 200, 94
    DB 0x00, 238, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 238, 152
    DB 0x03, 254, 154
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 150, -1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 150, 232
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x00, 200, 203
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 200, 86
    DB 0x00, 178, 105
    DB 0x00, 225, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 155
    DB 0x03, 253, 160
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 133, 20, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 133, 20, 251
    DB 0x74, 55, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x00, 178, 228
    DB 0xb4, 27, 2
    DB 0x74, 55, 40
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x34, 19, 49
    DB 0x24, 18, 66
    DB 0x34, 19, 4
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x34, 19, 109
    DB 0x03, 254, 154
    DB 0x00, 100, 14
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 100, 110, 251
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 100, 110, 251
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x04, 16, 144
    DB 0x14, 49, 1
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x14, 49, 43
    DB 0x03, 243, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 225, 161
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 59
    DB 0x00, 133, 42, 251
    DB 0x00, 238, 5
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 238, 152
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x00, 238, 152
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x54, 37, 57
    DB 0x03, 254, 166
    DB 0xb4, 27, 2
    DB 0x74, 55, 1
    DB 0x74, 55, 1
    db 8, titleThemeData & 0xFF, (titleThemeData >> 8) & 0xFF

pauseSFXData:
    db 0, 88, 110   
    db 7, 162, 6   
    db 0, 44, 217   
    db 7, 162, 6   
    db 0, 88, 110   
    db 7, 162, 6   
    db 0, 44, 217   
    db 9

menuNavSFXData:
    db 0, 136, 52   
    db 9

levelUpSFXData:
    db 0, 105, 101   
    db 7, 162, 4   
    db 0, 85, 133   
    db 7, 162, 4   
    db 0, 71, 159   
    db 7, 162, 4   
    db 0, 52, 216   
    db 7, 162, 4   
    db 0, 105, 108   
    db 9

pieceMoveSFXData:
    db 0, 91, 69   
    db 9

rotateSFXData:
    db 0, 85, 40   
    db 244, 15, 17   
    db 132, 24, 4   
    db 0, 91, 45   
    db 244, 15, 17   
    db 132, 24, 2   
    db 0, 136, 26   
    db 36, 18, 15   
    db 180, 27, 3   
    db 0, 91, 33   
    db 244, 15, 18   
    db 148, 25, 5   
    db 0, 138, 28   
    db 36, 18, 14   
    db 180, 27, 3   
    db 9

lineClearSFXData:
    db 212, 45, 13   
    db 244, 47, 12   
    db 100, 22, 25   
    db 148, 25, 23   
    db 84, 21, 27   
    db 132, 24, 23   
    db 52, 19, 29   
    db 100, 22, 25   
    db 36, 18, 31   
    db 84, 21, 27   
    db 4, 16, 34   
    db 68, 20, 28   
    db 0, 254, 37   
    db 52, 19, 29   
    db 0, 228, 41   
    db 20, 17, 33   
    db 0, 215, 43   
    db 4, 16, 34   
    db 0, 202, 46   
    db 4, 16, 34   
    db 0, 178, 52   
    db 0, 202, 46   
    db 9

lineClear4SFXData:
    db 0, 44, 24, 251
    db 0, 59, 113, 251
    db 0, 44, 24, 251
    db 0, 59, 219, 251
    db 0, 140, 33   
    db 0, 135, 35   
    db 0, 130, 36   
    db 0, 126, 37   
    db 0, 122, 38   
    db 0, 118, 40   
    db 0, 148, 212   
    db 0, 151, 28   
    db 0, 145, 29   
    db 0, 140, 30   
    db 0, 154, 30   
    db 0, 158, 30   
    db 0, 162, 29   
    db 0, 166, 28   
    db 0, 171, 27   
    db 0, 175, 27   
    db 9

pieceLandedSFXData:
    db 148, 25, 7   
    db 196, 44, 4   
    db 116, 71, 2   
    db 100, 38, 3   
    db 164, 58, 2   
    db 68, 116, 1   
    db 9

gameOverSFXData:
    db 68, 36, 5     
    db 100, 22, 67   
    db 196, 44, 34   
    db 100, 22, 43   
    db 116, 23, 39   
    db 148, 25, 23   
    db 0xF7, 255, 23 
    db 0, 178, 141   
    db 0, 189, 133   
    db 0, 178, 141   
    db 0, 189, 133   
    db 0, 178, 141   
    db 0, 159, 158   
    db 0, 178, 141   
    db 0, 189, 133   
    db 0, 178, 30, 251
    db 9

rocketSongData:
    db 0, 142, 197   
    db 0, 140, 200   
    db 0, 225, 249   
    db 0, 189, 44, 251
    db 0, 141, 144, 251
    db 0, 126, 222   
    db 0, 125, 223   
    db 0, 212, 12, 251
    db 0, 189, 44, 251 
    db 0, 126, 191, 251
    db 0, 112, 249   
    db 0, 111, 251   
    db 0, 189, 44, 251
    db 0, 150, 121, 251
    db 0, 112, 246, 251  
    db 0, 106, 11, 251
    db 0, 105, 13, 251
    db 0, 212, 12, 251
    db 0, 168, 81, 251
    db 0, 105, 27, 251, 251
    db 0, 126, 222   
    db 0, 125, 223   
    db 0, 212, 12, 251
    db 0, 168, 81, 251
    db 0, 126, 191, 251
    db 0, 150, 186   
    db 0, 149, 188   
    db 0, 252, 222   
    db 0, 189, 44, 251
    db 0, 150, 121, 251
    db 8, rocketSongData & 0xFF, (rocketSongData >> 8) & 0xFF

dancersSongData:
    DB 0x00, 141, 61
    DB 0x00, 106, 81
    DB 0x00, 141, 154
    DB 0x00, 106, 163
    DB 0x00, 112, 155
    DB 0x00, 106, 191
    DB 0x03, 253, 68
    DB 0x00, 106, 34, 251
    DB 0x03, 250, 34
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x34, 19, 4
    DB 0x00, 126, 68
    DB 0x34, 19, 26
    DB 0x00, 106, 81
    DB 0x34, 19, 13
    DB 0x14, 17, 9
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x14, 17, 9
    DB 0x00, 141, 61
    DB 0x14, 17, 30
    DB 0x00, 94, 45
    DB 0x14, 17, 30
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x00, 252, 22
    DB 0x00, 159, 26
    DB 0x00, 252, 28
    DB 0x00, 84, 102
    DB 0x00, 252, 16
    DB 0x00, 126, 241
    DB 0x03, 250, 34
    DB 0x00, 168, 103
    DB 0x00, 106, 204
    DB 0x00, 141, 123
    DB 0x00, 150, 115
    DB 0x00, 141, 154
    DB 0x00, 212, 75
    DB 0x00, 168, 103
    DB 0x00, 141, 154
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x00, 141, 9
    DB 0xa4, 26, 9
    DB 0x00, 141, 61
    DB 0xa4, 26, 40
    DB 0x74, 23, 7
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x74, 23, 7
    DB 0x00, 189, 45
    DB 0x74, 23, 10
    DB 0x00, 126, 68
    DB 0x74, 23, 22
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x44, 20, 3
    DB 0x00, 212, 40
    DB 0x44, 20, 25
    DB 0x00, 112, 64
    DB 0x44, 20, 12
    DB 0x00, 168, 129
    DB 0x00, 141, 123
    DB 0x74, 23, 3
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 10
    DB 0x00, 189, 45
    DB 0x74, 23, 10
    DB 0x00, 189, 45
    DB 0x74, 23, 22
    DB 0x00, 189, 45
    DB 0x74, 23, 22
    DB 0x00, 141, 123
    DB 0x74, 23, 7
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 7
    DB 0x00, 212, 40
    DB 0x74, 23, 22
    DB 0x00, 212, 20
    DB 0x74, 23, 18
    DB 0x00, 212, 40
    DB 0x74, 23, 22
    DB 0x00, 189, 92
    DB 0x74, 23, 10
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 3
    DB 0x00, 225, 38
    DB 0x74, 23, 22
    DB 0x00, 225, 38
    DB 0x74, 23, 10
    DB 0x00, 225, 38
    DB 0x74, 23, 22
    DB 0x00, 141, 154
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 3
    DB 0x00, 189, 45
    DB 0x74, 23, 22
    DB 0x00, 189, 45
    DB 0x74, 23, 22
    DB 0x00, 189, 14
    DB 0x74, 23, 22
    DB 0x00, 189, 22
    DB 0x00, 141, 123
    DB 0xa4, 26, 2
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0xa4, 26, 9
    DB 0x00, 212, 20
    DB 0xa4, 26, 19
    DB 0x00, 212, 40
    DB 0xa4, 26, 19
    DB 0x00, 212, 40
    DB 0xa4, 26, 9
    DB 0x00, 212, 20
    DB 0x00, 141, 123
    DB 0xa4, 26, 2
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0xa4, 26, 9
    DB 0x00, 212, 40
    DB 0xa4, 26, 9
    DB 0x00, 212, 40
    DB 0xa4, 26, 19
    DB 0x00, 212, 40
    DB 0xa4, 26, 16
    DB 0x00, 141, 123
    DB 0xb4, 27, 9
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0xb4, 27, 2
    DB 0x00, 189, 45
    DB 0xb4, 27, 19
    DB 0x00, 189, 22
    DB 0xb4, 27, 19
    DB 0x00, 189, 7
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x00, 189, 22
    DB 0xb4, 27, 19
    DB 0x00, 212, 102
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0xb4, 27, 2
    DB 0x00, 189, 45
    DB 0xb4, 27, 19
    DB 0x00, 141, 61
    DB 0xb4, 27, 9
    DB 0x00, 126, 137
    DB 0x00, 112, 180
    DB 0x00, 212, 40
    DB 0x00, 141, 30
    DB 0x00, 106, 81
    DB 0x00, 212, 40
    DB 0x00, 141, 61
    DB 0x00, 106, 81
    DB 0x00, 212, 20
    DB 0x00, 106, 40
    DB 0x00, 112, 155
    DB 0x00, 106, 163
    DB 0x03, 254, 85
    DB 0x00, 106, 21, 251
    DB 0x03, 243, 17
    DB 0x34, 19, 8
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x34, 19, 8
    DB 0x00, 126, 68
    DB 0x34, 19, 26
    DB 0x00, 106, 40
    DB 0x34, 19, 26
    DB 0x14, 17, 4
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x14, 17, 14
    DB 0x00, 141, 30
    DB 0x14, 17, 30
    DB 0x00, 94, 92
    DB 0x14, 17, 14
    DB 0x00, 252, 16
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x00, 252, 5
    DB 0x00, 159, 54
    DB 0x00, 252, 34
    DB 0x00, 84, 102
    DB 0x00, 252, 16
    DB 0x00, 126, 241
    DB 0x03, 251, 28
    DB 0x00, 168, 103
    DB 0x00, 106, 163
    DB 0x00, 141, 154
    DB 0x00, 150, 115
    DB 0x00, 141, 123
    DB 0x00, 212, 82
    DB 0x00, 168, 129
    DB 0x00, 141, 133
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0xa4, 26, 16
    DB 0x00, 141, 61
    DB 0xa4, 26, 40
    DB 0x74, 23, 3
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x74, 23, 10
    DB 0x00, 189, 22
    DB 0x74, 23, 22
    DB 0x00, 126, 68
    DB 0x74, 23, 10
    DB 0x44, 20, 8
    DB 0xb4, 27, 2
    DB 0xc4, 44, 1
    DB 0x44, 20, 8
    DB 0x00, 212, 40
    DB 0x44, 20, 25
    DB 0x00, 112, 77
    DB 0x44, 20, 12
    DB 0x00, 168, 103
    DB 0x00, 141, 154
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 3
    DB 0x00, 189, 38
    DB 0x74, 23, 22
    DB 0x00, 189, 45
    DB 0x74, 23, 22
    DB 0x00, 189, 22
    DB 0x74, 23, 22
    DB 0x00, 141, 154
    DB 0x74, 23, 3
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 10
    DB 0x00, 212, 20
    DB 0x74, 23, 22
    DB 0x00, 212, 40
    DB 0x74, 23, 22
    DB 0x00, 212, 40
    DB 0x74, 23, 10
    DB 0x00, 212, 20
    DB 0x00, 189, 92
    DB 0x74, 23, 3
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 10
    DB 0x00, 225, 31
    DB 0x74, 23, 10
    DB 0x00, 225, 38
    DB 0x74, 23, 22
    DB 0x00, 225, 38
    DB 0x74, 23, 22
    DB 0x00, 141, 123
    DB 0x74, 23, 7
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x74, 23, 7
    DB 0x00, 189, 45
    DB 0x74, 23, 22
    DB 0x00, 189, 22
    DB 0x74, 23, 22
    DB 0x00, 189, 45
    DB 0x74, 23, 22
    DB 0x00, 141, 123
    DB 0xa4, 26, 6
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0xa4, 26, 6
    DB 0x00, 168, 51
    DB 0xa4, 26, 16
    DB 0x00, 168, 51
    DB 0xa4, 26, 9
    DB 0x00, 168, 51
    DB 0xa4, 26, 19
    DB 0x00, 141, 154
    DB 0xa4, 26, 2
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x00, 189, 45
    DB 0xa4, 26, 19
    DB 0x00, 189, 45
    DB 0xa4, 26, 19
    DB 0x00, 189, 22
    DB 0xa4, 26, 19
    DB 0x00, 189, 22
    DB 0x00, 141, 123
    DB 0x00, 212, 6
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x00, 212, 157
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x44, 20, 3
    DB 0x00, 168, 51
    DB 0x44, 20, 25
    DB 0x00, 168, 51
    DB 0x44, 20, 12
    DB 0x00, 212, 13
    DB 0x34, 19, 4
    DB 0xc4, 44, 1
    DB 0x00, 212, 13
    DB 0x00, 106, 81
    DB 0x00, 212, 40
    DB 0x00, 106, 40
    DB 0x00, 212, 123
    DB 0x00, 212, 123
    db 9

gameBWinData:
    DB 0x03, 255, 250
    DB 0x00, 159, 81
    DB 0x03, 243, 17
    DB 0x00, 159, 81
    DB 0x00, 119, 138, 251
    DB 0x00, 159, 109
    DB 0x00, 119, 8, 251, 251
    db 9

brmArrow:
    db 3
    db 0b11111
    db 0b01110
    db 0b00100
    db 0

btmClearNextPiece:
    db 12
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0

btmSelectLevel:
    db 7
    db 0b01111111
    db 0b01111111
    db 0b01111111
    db 0b01111111
    db 0b01111111
    db 0b01111111
    db 0b01111111
    db 0

btmRocketSmall:
    db 19, 34       ;height, x
    db 5
    db 0b00000000
    db 0b00000000
    db 0b11101110
    db 0b11010011
    db 0b11101110
    db 7
    db 0b11110000
    db 0b00101000
    db 0b11111111
    db 0b01000010
    db 0b11111111
    db 0b00101000
    db 0b11110000
    db 7
    db 0b00000110
    db 0b00000101
    db 0b00000111
    db 0b00000100
    db 0b00000111
    db 0b00000101
    db 0b00000110
    db 0

btmRocketMid:
    db 27, 34       ;height, x
    db 6
    db 0b00000000
    db 0b11111000
    db 0b01010110
    db 0b10010011
    db 0b01010110
    db 0b11111000
    db 6
    db 0b00000000
    db 0b11111111
    db 0b10101010
    db 0b01010001
    db 0b10101010
    db 0b11111111
    db 6
    db 0b00000000
    db 0b11111111
    db 0b01011100
    db 0b01000101
    db 0b01011100
    db 0b11111111
    db 7
    db 0b00000100
    db 0b00000110
    db 0b00000101
    db 0b00000011
    db 0b00000101
    db 0b00000110
    db 0b00000100
    db 0

btmRocketBig:
    db 37, 32       ;height, x
    db 8
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b11100000
    db 0b00010110
    db 0b01001101
    db 0b00010110
    db 0b11100000
    db 8
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b11111110
    db 0b10101101
    db 0b00110100
    db 0b10101101
    db 0b11111110
    db 8
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b11111111
    db 0b10101010
    db 0b01010101
    db 0b10101010
    db 0b11111111
    db 10
    db 0b00000000
    db 0b11000000
    db 0b00111000
    db 0b10000111
    db 0b01110000
    db 0b00001101
    db 0b01110000
    db 0b10000111
    db 0b00111000
    db 0b11000000
    db 11
    db 0b00001100
    db 0b00011011
    db 0b00010010
    db 0b00001111
    db 0b00010100
    db 0b00010100
    db 0b00010100
    db 0b00001111
    db 0b00010010
    db 0b00011011
    db 0b00001100
    db 0

btmBuran:
    db 35, 28       ;height, x
    db 14
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b11000000
    db 0b00110000
    db 0b00001000
    db 0b00100110
    db 0b00100001
    db 0b01100110
    db 0b10101000
    db 0b00110000
    db 0b11000000
    db 17
    db 0b00000000
    db 0b00000000
    db 0b11000000
    db 0b00100000
    db 0b00011000
    db 0b10111111
    db 0b00000000
    db 0b11000010
    db 0b00100000
    db 0b10010000
    db 0b00100000
    db 0b11001011
    db 0b00000000
    db 0b01111111
    db 0b10011000
    db 0b00100000
    db 0b11000000
    db 17
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0b11111100
    db 0b10000000
    db 0b01110010
    db 0b00001111
    db 0b11110000
    db 0b00101011
    db 0b00000001
    db 0b00101011
    db 0b11110000
    db 0b00001111
    db 0b01110101
    db 0b10101010
    db 0b11111101
    db 0b00000011
    db 19
    db 0b00110000
    db 0b11101000
    db 0b01100100
    db 0b10100011
    db 0b10100001
    db 0b10100000
    db 0b10100000
    db 0b11111111
    db 0b00001001
    db 0b11101001
    db 0b00001001
    db 0b11111111
    db 0b10100000
    db 0b10101000
    db 0b10101001
    db 0b10100011
    db 0b01100100
    db 0b11101000
    db 0b00110000
    db 18
    db 0b00000000
    db 0b00000010
    db 0b00000101
    db 0b00000100
    db 0b00000101
    db 0b00000010
    db 0b00000101
    db 0b00000101
    db 0b00000010
    db 0b00000111
    db 0b00000010
    db 0b00000101
    db 0b00000101
    db 0b00000010
    db 0b00000101
    db 0b00000110
    db 0b00000101
    db 0b00000010
    db 0

btmFireSmallBuranMask:
    db 16
    db 0b00000000
    db 0b00001110
    db 0b00111111
    db 0b11111111
    db 0b00111111
    db 0b00000110
    db 0b00011111
    db 0b00111111
    db 0b11111111
    db 0b00111111
    db 0b00011111
    db 0b00000110
    db 0b00111111
    db 0b11111111
    db 0b00111111
    db 0b00001110
    db 0

btmFireSmallBuran:
    db 16
    db 0b00000000
    db 0b00001110
    db 0b00110001
    db 0b11000000
    db 0b00110001
    db 0b00000110
    db 0b00011001
    db 0b00100000
    db 0b11000000
    db 0b00100000
    db 0b00011001
    db 0b00000110
    db 0b00110001
    db 0b11000000
    db 0b00110001
    db 0b00001110
    db 0

btmFireSmallMask:
    db 6
    db 0b00000000
    db 0b00000111
    db 0b00001111
    db 0b00011111
    db 0b00001111
    db 0b00000111
    db 0

btmFireSmall:
    db 6
    db 0b00000000
    db 0b00000111
    db 0b00001100
    db 0b00010000
    db 0b00001100
    db 0b00000111
    db 0

btmFireBigBuranMask:
    db 17
    db 0b00011110
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b00111111
    db 0b00001110
    db 0b00111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b00111111
    db 0b00001110
    db 0b00111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b00011110
    db 15
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0

btmFireBigBuran:
    db 17
    db 0b00011110
    db 0b11100001
    db 0b00000000
    db 0b11000000
    db 0b00110001
    db 0b00001110
    db 0b00110001
    db 0b11000000
    db 0b00000000
    db 0b11000000
    db 0b00110001
    db 0b00001110
    db 0b00110001
    db 0b11000000
    db 0b00000000
    db 0b11100001
    db 0b00011110
    db 15
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0

btmFireBigMask:
    db 7
    db 0b00001110
    db 0b00111111
    db 0b11111111
    db 0b11111111
    db 0b11111111
    db 0b00111111
    db 0b00001110
    db 4
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0

btmFireBig:
    db 7
    db 0b00001110
    db 0b00110001
    db 0b11000000
    db 0b00110001
    db 0b11001110
    db 0b00110001
    db 0b00001110
    db 4
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000011
    db 0

btmLaunchPad:
    db 19
    db 0b01111001
    db 0b01111001
    db 0b01001001
    db 0b01001001
    db 0b01111001
    db 0b01111001
    db 0b01001001
    db 0b01001001
    db 0b01111001
    db 0b01111001
    db 0b01111001
    db 0b01001001
    db 0b01001001
    db 0b01111001
    db 0b01111001
    db 0b01001001
    db 0b01001001
    db 0b01111001
    db 0b01111001
    db 0

btmFume:
    db 29
    db 0b00000000
    db 0b00000000
    db 0b01100000
    db 0b10010000
    db 0b01001000
    db 0b10001000
    db 0b01010000
    db 0b00100000
    db 0b10010000
    db 0b01010000
    db 0b10100000
    db 0b01000000
    db 0b10000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b10000000
    db 0b01000000
    db 0b10100000
    db 0b01010000
    db 0b10010000
    db 0b00100000
    db 0b01010000
    db 0b01110000
    db 0b10000000
    db 0

btmFumeBuran:
    db 33
    db 0b01101100
    db 0b11010010
    db 0b11010100
    db 0b11111100
    db 0b11111000
    db 0b11010110
    db 0b01001001
    db 0b10010100
    db 0b01110000
    db 0b00000000
    db 0b11000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b10000000
    db 0b00000000
    db 0b01110000
    db 0b10010100
    db 0b01001001
    db 0b11010110
    db 0b11111000
    db 0b11111100
    db 0b11010100
    db 0b11010010
    db 0b01101100
    db 0

btmLeftMast:
    db 11
    db 0b11111111
    db 0b01010101
    db 0b11101011
    db 0b11111111
    db 0b11001010
    db 0b11001110
    db 0b11001010
    db 0b10000110
    db 0b01000010
    db 0b11000000
    db 0b10000000
    db 4
    db 0b11111111
    db 0b01010101
    db 0b10101010
    db 0b11111111
    db 4
    db 0b11111111
    db 0b01010101
    db 0b10101010
    db 0b11111111
    db 0

btmWires:
    db 6
    db 0b11001110
    db 0b11001010
    db 0b10000110
    db 0b01000010
    db 0b11000000
    db 0b10000000
    db 0

btmPartyHard0:
btmViolinist0:
    db 23, 8 ;XY
    db 8
    db 0b00000000
    db 0b11110000
    db 0b11001111
    db 0b11011011
    db 0b10111111
    db 0b11011000
    db 0b00100100
    db 0b01000000
    db 6
    db 0b00000000
    db 0b00000101
    db 0b00000110
    db 0b00000001
    db 0b00000110
    db 0b00000101
    db 0
btmCellist0:
    db 15, 7
    db 8
    db 0b11000000
    db 0b00101110
    db 0b01010110
    db 0b01101110
    db 0b01110000
    db 0b01111111
    db 0b11111111
    db 0b11110000
    db 8
    db 0b00000000
    db 0b00001011
    db 0b00001101
    db 0b00000011
    db 0b00000111
    db 0b00001111
    db 0b00001111
    db 0b00000111
    db 0
btmGuitarist0:
    db 8, 8
    db 7
    db 0b01010000
    db 0b11101000
    db 0b10010111
    db 0b10001011
    db 0b11010111
    db 0b11111000
    db 0b00100000
    db 6
    db 0b00000000
    db 0b00000101
    db 0b00000110
    db 0b00000001
    db 0b00000110
    db 0b00000101
    db 0
btmDrummer0:
    db 9, 35
    db 9
    db 0b00000000
    db 0b01100000
    db 0b10010000
    db 0b11111110
    db 0b00010110
    db 0b11111110
    db 0b11010000
    db 0b00101000
    db 0b00011111
    db 7
    db 0b00000000
    db 0b00000000
    db 0b00001011
    db 0b00001111
    db 0b00000010
    db 0b00000111
    db 0b00000101
    db 0
btmClapper0:
    db 23, 49
    db 6
    db 0b11111000
    db 0b00100111
    db 0b11101011
    db 0b10100111
    db 0b01011100
    db 0b00000110
    db 5
    db 0b00000010
    db 0b00000011
    db 0b00000000
    db 0b00000001
    db 0b00000001
    db 0
btmAccordionist0:
    db 29, 48
    db 9
    db 0b01100000
    db 0b10110000
    db 0b11101000
    db 0b10101111
    db 0b11100011
    db 0b10101111
    db 0b11101000
    db 0b10110000
    db 0b01100000
    db 7
    db 0b00000000
    db 0b00000000
    db 0b00000101
    db 0b00000110
    db 0b00000001
    db 0b00000110
    db 0b00000101
    db 0
btmJumpers0:
    db 18, 26
    db 20
    db 0b00010000
    db 0b10011000
    db 0b00101000
    db 0b11101000
    db 0b10001111
    db 0b00000011
    db 0b10001111
    db 0b11101000
    db 0b00101000
    db 0b10011000
    db 0b01010000
    db 0b01100000
    db 0b10100000
    db 0b10100000
    db 0b00111100
    db 0b10001100
    db 0b10111100
    db 0b11000000
    db 0b00000000
    db 0b10000000
    db 20
    db 0b00000000
    db 0b00000011
    db 0b00000011
    db 0b00000010
    db 0b00000010
    db 0b00000010
    db 0b00000010
    db 0b00000010
    db 0b00000011
    db 0b00000011
    db 0b00000000
    db 0b00000000
    db 0b00000000
    db 0b00010111
    db 0b00011000
    db 0b00000100
    db 0b00000010
    db 0b00000010
    db 0b00000011
    db 0b00000001
    db 0
btmDancers0:
    db 56, 51
    db 12
    db 0b00000110
    db 0b10001011
    db 0b01010100
    db 0b00111010
    db 0b01001100
    db 0b10110000
    db 0b00000110
    db 0b10001011
    db 0b01010100
    db 0b00111010
    db 0b01001100
    db 0b10110000
    db 12
    db 0b00000000
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0b00000000
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0

btmPartyHard1:
btmViolinist1:
    db 23, 8 ;XY
    db 8
    db 0b01110000
    db 0b11001111
    db 0b11011011
    db 0b10101111
    db 0b10011100
    db 0b11011000
    db 0b00100000
    db 0b01000000
    db 6
    db 0b00000000
    db 0b00000101
    db 0b00000110
    db 0b00000001
    db 0b00000110
    db 0b00000101
    db 0
btmCellist1:
    db 15, 7
    db 8
    db 0b00000000
    db 0b11000000
    db 0b00111110
    db 0b01010110
    db 0b01111110
    db 0b01111111
    db 0b01111111
    db 0b11110000
    db 8
    db 0b00000000
    db 0b00001011
    db 0b00001101
    db 0b00000011
    db 0b00000111
    db 0b00001111
    db 0b00001111
    db 0b00000111
    db 0
btmGuitarist1:
    db 8, 8
    db 8
    db 0b00110000
    db 0b11001000
    db 0b11010111
    db 0b10101011
    db 0b11010111
    db 0b11111000
    db 0b00100000
    db 0b00100000
    db 6
    db 0b00000000
    db 0b00000101
    db 0b00000110
    db 0b00000001
    db 0b00000110
    db 0b00000101
    db 0
btmDrummer1:
    db 9, 35
    db 8
    db 0b00011111
    db 0b00101000
    db 0b11010000
    db 0b11111110
    db 0b00010110
    db 0b11111110
    db 0b10010000
    db 0b01100000
    db 7
    db 0b00000000
    db 0b00000000
    db 0b00001011
    db 0b00001111
    db 0b00000010
    db 0b00000111
    db 0b00000101
    db 0
btmClapper1:
    db 23, 49
    db 5
    db 0b11110000
    db 0b01001110
    db 0b11010110
    db 0b01001110
    db 0b10111000
    db 5
    db 0b00000010
    db 0b00000011
    db 0b00000000
    db 0b00000011
    db 0b00000010
    db 0
btmAccordionist1:
    db 29, 48
    db 8
    db 0b00000000
    db 0b01100000
    db 0b10010000
    db 0b11101111
    db 0b11100011
    db 0b11101111
    db 0b10010000
    db 0b01100000
    db 7
    db 0b00000000
    db 0b00000000
    db 0b00000101
    db 0b00000110
    db 0b00000001
    db 0b00000110
    db 0b00000101
    db 0
btmJumpers1:
    db 18, 26
    db 20
    db 0b00000000
    db 0b00000000
    db 0b10000000
    db 0b01000000
    db 0b10111100
    db 0b10001100
    db 0b10111100
    db 0b01000000
    db 0b10000000
    db 0b00000000
    db 0b10000000
    db 0b00000000
    db 0b11000000
    db 0b10111100
    db 0b10001100
    db 0b00111100
    db 0b10100000
    db 0b10100000
    db 0b01100000
    db 0b01000000
    db 17
    db 0b00000000
    db 0b00000000
    db 0b00000001
    db 0b00010110
    db 0b00011010
    db 0b00000110
    db 0b00011010
    db 0b00010110
    db 0b00000001
    db 0b00000000
    db 0b00000001
    db 0b00000011
    db 0b00000010
    db 0b00000010
    db 0b00000100
    db 0b00011000
    db 0b00010111
    db 0
btmDancers1:
    db 56, 51
    db 13
    db 0b10000111
    db 0b01001010
    db 0b00110100
    db 0b01111010
    db 0b10010100
    db 0b00101000
    db 0b10000111
    db 0b01001010
    db 0b00110100
    db 0b01111010
    db 0b10010100
    db 0b00101000
    db 0b00010000
    db 11
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0b00000000
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0b00000011
    db 0b00000001
    db 0


    org $ & 0xFF00 + 256
piece:
    ;((X+1)*3-1)(Y)
pieceL:
    db 0x22, 0x52, 0x82, 0x23
    db 0x21, 0x51, 0x52, 0x53
    db 0x22, 0x52, 0x82, 0x81
    db 0x51, 0x52, 0x53, 0x83

pieceJ:
    db 0x22, 0x52, 0x82, 0x83
    db 0x51, 0x52, 0x53, 0x23
    db 0x21, 0x22, 0x52, 0x82
    db 0x51, 0x52, 0x53, 0x81

pieceI:
    db 0x22, 0x52, 0x82, 0xB2
    db 0x50, 0x51, 0x52, 0x53
    db 0x22, 0x52, 0x82, 0xB2
    db 0x50, 0x51, 0x52, 0x53

pieceO:
    db 0x52, 0x82, 0x53, 0x83
    db 0x52, 0x82, 0x53, 0x83
    db 0x52, 0x82, 0x53, 0x83
    db 0x52, 0x82, 0x53, 0x83

pieceZ:
    db 0x22, 0x52, 0x53, 0x83
    db 0x23, 0x22, 0x52, 0x51
    db 0x22, 0x52, 0x53, 0x83
    db 0x23, 0x22, 0x52, 0x51

pieceS:
    db 0x23, 0x53, 0x52, 0x82
    db 0x21, 0x22, 0x52, 0x53
    db 0x23, 0x53, 0x52, 0x82
    db 0x21, 0x22, 0x52, 0x53

pieceT:
    db 0x22, 0x52, 0x82, 0x53
    db 0x51, 0x52, 0x53, 0x22
    db 0x22, 0x52, 0x82, 0x51
    db 0x51, 0x52, 0x53, 0x82

tbl3x1:
    db 0b00000111, 0b00000000
    db 0b00111000, 0b00000000
    db 0b11000000, 0b00000001
    db 0b00000000, 0b00001110
tbl3x1Half:
    db 0b01110000, 0b00000000
    db 0b10000000, 0b00000011
    db 0b00000000, 0b00011100
    db 0b00000000, 0b11100000
tbl3x1End:

scoresAdderByLevel:
    db 0x00, 0x12, 0x00
    db 0x00, 0x03, 0x00
    db 0x00, 0x01, 0x00
    db 0x00, 0x00, 0x40

scoresAdderInc:
    db 0x00, 0x00, 0x01

delayByLevel:
    db 52, 48, 44, 40, 36, 32, 27, 21, 16, 10, 9, 8, 7, 6, 5, 5, 4, 4, 3, 3, 2

    END
